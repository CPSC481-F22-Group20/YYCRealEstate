@page "/discover2/{data}"

@inject NavigationManager NavManager
<PageTitle>Discovery2</PageTitle>

<h1 class="page-title">Discovery</h1>

<div class="question">
    <p>Which style of housing do you prefer.</p>
</div>

<div class="column" style="width: 25%;">
</div>
<div class="column">
    <button class="images" id="image1" @onclick=@img1 style =@img1style></button>
</div>
<div class="column" style="width: 10%;">
</div>
<div class="column">
    <button class="images" id="image2" @onclick=@img2 style =@img2style></button>
</div>
<div class="column" style="width: 25%;">
</div>

<div class="question">
    <p>How do you spend your Weekends.</p>
</div>

<div class="column">
</div>
<div class="column">
    <button class="images" id="image3" @onclick=@img3 style=@img3style></button>
</div>
<div class="column">
    <button class="images" id="image4" @onclick=@img4 style=@img4style></button>
</div>
<div class="column">
    <button class="images" id="image5" @onclick=@img5 style=@img5style></button>
</div>
<div class="column">
</div>


<div class="error-column" style=@errorstyle>
    <text class="error-msg">@error</text>
    <button type="button" class="error-btn" @onclick=@closeError>x</button>
</div>
<div class="btn-column">
    <button type="button" @onclick=results>
        Get results!
    </button>
</div>

@if (showResults == 1) { 
 <div class="blackbackground"></div>
<div class="box">
        Based on our survey we recommend:
        <div class="type">
            Dwelling:
            <a style="font-weight:100;">@Dwelling</a>
        </div>
        <div class="type">
            Bedrooms:
            <a style="font-weight:100;">@Selectbedrooms</a>
        </div>
        <div class="type">
            Bathrooms:
            <a style="font-weight:100;">@Selectbathrooms</a>
        </div>
        <div class="type">
            SquareFeet:
            <a style="font-weight:100;">@Selectsqrtft</a>
        </div>
        <div style="font-size:20px">@paragraph</div>
        <button type="button" class="main-btn" onclick=@MainBtn>Apply Filter</button>
</div>

}

@code {
    [Parameter] public string data { get; set; }
    int Dwelling_suggested = 0; //0 = nothing, 1 - apartment, 2 = condo, 3 = detached, 4 - duplex
    int showResults = 0;
    string Dwelling = ""; 
    string spaceValue = "";
    string peopleValue = "";
    string paragraph = "";

    int space = 0;
    int people = 0;

    string bedrooms = "0";
    string bathrooms = "0";
    string sqrtft = "0";

    int selected1 = 0;
    int selected2 = 0;

    string errorstyle = "visibility: hidden;";
    string error = "All Fields must be completed";

    string SelectDwelling
    {
        get => Dwelling;
        set { Dwelling = value; }
    }
    string SelectSpace
    {
        get => spaceValue;
        set { spaceValue = value; }
    }
    string Selectpeople
    {
        get => peopleValue;
        set { peopleValue = value; }
    }
    string Selectbedrooms
    {
        get => bedrooms;
        set { bedrooms = value; }
    }
    string Selectbathrooms
    {
        get => bathrooms;
        set { bathrooms = value; }
    }
    string Selectsqrtft
    {
        get => sqrtft;
        set { sqrtft = value; }
    }
    protected override void OnParametersSet()
    {
        if (data.ElementAt(0) == 'D' && data.ElementAt(1) == 'e')
        {
            Dwelling_suggested = 3;
            Dwelling = "Detached";
            spaceValue = data.ElementAt(8).ToString();
            peopleValue = data.ElementAt(9).ToString();
        }
        else if (data.ElementAt(0) == 'A')
        {
            Dwelling_suggested = 1;
            Dwelling = "Apartment";
            spaceValue = data.ElementAt(9).ToString();
            peopleValue = data.ElementAt(10).ToString();
        }
        else if (data.ElementAt(0) == 'C')
        {
            Dwelling_suggested = 2;
            Dwelling = "Condominium";
            spaceValue = data.ElementAt(11).ToString();
            peopleValue = data.ElementAt(12).ToString();
        }
        else 
        {
            Dwelling_suggested = 4;
            Dwelling = "Duplex";
            spaceValue = data.ElementAt(6).ToString();
            peopleValue = data.ElementAt(7).ToString();
        }

        space = (int)Int64.Parse(spaceValue);
        people = (int)Int64.Parse(peopleValue);

    }


    void closeError()
    {
        errorstyle = "visibility: hidden;";
    }
    async Task hideerror()
    {
        await Task.Delay(1000);
        errorstyle = "visibility: hidden;";
    }

    string img1style = "border: 7px solid black;";
    int image1bool = 0;
    string img2style = "border: 7px solid black;";
    int image2bool = 0;

    void img1()
    {
        selected1 = 1;

        img1style = "border: 7px solid red;";
        img2style = "border: 7px solid black;";

        image1bool = 1;
        image2bool = 0;

    }

    void img2()
    {
        selected1 = 1;

        img1style = "border: 7px solid black;";
        img2style = "border: 7px solid red;";

        image1bool = 0;
        image2bool = 1;

    }

    string img3style = "border: 7px solid black;";
    int image3bool = 0;
    string img4style = "border: 7px solid black;";
    int image4bool = 0;
    string img5style = "border: 7px solid black;";
    int image5bool = 0;



    void img3()
    {
        selected2 = 1;

        img3style = "border: 7px solid red;";
        img4style = "border: 7px solid black;";
        img5style = "border: 7px solid black;";

        image3bool = 1;
        image4bool = 0;
        image5bool = 0;

    }
    void img4()
    {
        selected2 = 1;

        img3style = "border: 7px solid black;";
        img4style = "border: 7px solid red;";
        img5style = "border: 7px solid black;";

        image3bool = 0;
        image4bool = 1;
        image5bool = 0;

    }
    void img5()
    {
        selected2 = 1;

        img3style = "border: 7px solid black;";
        img4style = "border: 7px solid black;";
        img5style = "border: 7px solid red;";

        image3bool = 0;
        image4bool = 0;
        image5bool = 1;

    }

    void results() {
        if (selected1 == 0 || selected2 == 0)
        {
            errorstyle = "visibility: visible;";
            hideerror();
        }
        else {
            showResults = 1;

            if (space == 1) { sqrtft = "1000+"; }
            if (space == 2) { sqrtft = "1500+"; }
            if (space == 3) { sqrtft = "2000+"; }
            if (space == 4) { sqrtft = "2500+"; }
            if (space == 5) { sqrtft = "3000+"; }

            if (people == 1) { bedrooms = "1"; bathrooms = "1"; }
            if (people == 2) { bedrooms = "2"; bathrooms = "1"; }
            if (people == 3) { bedrooms = "3"; bathrooms = "2"; }
            if (people == 4) { bedrooms = "4"; bathrooms = "2"; }
            if (people == 5) { bedrooms = "5"; bathrooms = "3"; }

            if (image1bool == 1)
            {
                paragraph += "Additanally, we recommend you look at houses that were built before the year 2015, as these genrally have a more traditional look.";
            }
            else { 
                paragraph += "Additanally, we also recommend you look at houses that were built after the year 2015, as these genrally have a more modern look.";
            }

            if (image3bool == 1)
            {
                paragraph += "Since you prefer to be outdoors in your free time, we suggest you look at houses on the outskirts of calgary.";
            }
            else if (image4bool == 1)
            {
                paragraph += "Since you prefer to relax inside the comfort of your home, we recommend you stay away from the downtown area when looking for houses.";
            }
            else { 

                paragraph += "Since you like to enjoy your nightlife in the city, we recommend you look for houses near downtown";

            }
        }
    }

    void MainBtn()
    {

        string link = "/";
        if (Dwelling_suggested == 1) { link += "1000"; }
        else if (Dwelling_suggested == 2) { link += "0100"; }
        else if (Dwelling_suggested == 3) { link += "0010"; }
        else if (Dwelling_suggested == 4) { link += "0001"; }
        
        link += bedrooms;
        link += "8";
        link += bathrooms;
        link += "8";
        link += sqrtft;

        NavManager.NavigateTo(link);

    }





}

