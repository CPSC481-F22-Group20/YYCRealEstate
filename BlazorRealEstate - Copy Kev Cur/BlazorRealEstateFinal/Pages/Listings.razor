
@page "/listings/{data}"
@inject HttpClient Http

@inject NavigationManager NavManager

<PageTitle>Listings View</PageTitle>
<h1 class="page-title">YYC REAL ESTATES</h1>
<div class="listings-btn-column">
    <button type="button" @onclick=@filterShow>Filters</button>
    @if (!filterDispBool)
    {
            <select name="tools" id="tools" @bind=sort>
            <option value="Ascending">Sort by Price: Ascending</option>
            <option value="Descending">Sort By Price: Descending</option>
            <option value="Newest">Sort By Newest to Oldest</option>
            <option value="Oldest">Sort By Oldest to Newest</option>
        </select>
    }

</div>

@if (filterDispBool) {


    <div class="row">
        <div class="column">
            <filter-title class="italic-title" style="align-content:center;">
                Dwellings
                <br />
                <div class="column" style="width:100%;">
                    <text>
                        <label class="container">
                            Apartment
                            <input type="checkbox" @bind=Apartment>
                            <span class="checkmark"></span>
                        </label>

                        <label class="container">
                            Condominium
                            <input type="checkbox" @bind=Condominium>
                            <span class="checkmark"></span>
                        </label>

                        <label class="container">
                            Detached
                            <input type="checkbox" @bind=Detached>
                            <span class="checkmark"></span>
                        </label>

                        <label class="container">
                            Duplex
                            <input type="checkbox" @bind=Duplex>
                            <span class="checkmark"></span>
                        </label>
                    </text>
                </div>
            </filter-title>
        </div>
        <div class="column">
            <filter-title class="italic-title">
                Bedrooms
                <br>
                <text>
                    Min:
                    <select class="filter" @bind="@SelectMinBed">

                        @foreach (var beds in NumbList)
                        {

                            <option value="@beds.Number"> @beds.Number </option>
                        }

                    </select>
                    <br>
                    Max:
                    <select class="filter" @bind="@SelectMaxBed">

                        @foreach (var beds in NumbList)
                        {

                            <option value="@beds.Number"> @beds.Number </option>
                        }

                    </select>
                </text>
            </filter-title>
        </div>
        <div class="column">
            <filter-title class="italic-title">
                Bathrooms
                <br>
                <text>
                    Min:
                    <select class="filter" @bind="@SelectMinBaths">

                        @foreach (var numbs in NumbList)
                        {

                            <option value="@numbs.Number"> @numbs.Number </option>
                        }

                    </select>
                    <br>
                    Max:
                    <select class="filter" @bind="@SelectMaxBaths">

                        @foreach (var beds in NumbList)
                        {

                            <option value="@beds.Number"> @beds.Number </option>
                        }

                    </select>
                </text>
            </filter-title>
        </div>
        <div class="column">
            <filter-title class="italic-title">
                SquareFeet
                <br>
                <text>
                    Select one:
                    <select class="filter" @bind="@SelectSquareft">

                        @foreach (var numbs in SqftList)
                        {

                            <option value="@numbs.Sqfeet"> @numbs.Sqfeet </option>
                        }

                    </select>
                </text>
            </filter-title>
        </div>
    </div>

    <div>
        <h1 class="range-price">
            Price Range
            <br />
            <text class="range-prices">$@SelectMinPrice - $@SelectMaxPrice</text>
        </h1>
    </div>

    <div class="range-column-txt" id="min-text">
        <text>
            Min Price:
            <br />
            <input type="number" @bind="minPrice" />
        </text>
    </div>
    <div class="range-column-slider" id="min-slider">
        <input type="range" id="slider-input-left" style=@minWidth min="0" max=@minLimit @bind="minPrice" @bind:event="oninput" @onfocus="ChangeinMin" @onchange="ChangeMin" step="10000">
    </div>
    <div class="range-column-txt" id="max-text">
        <text>
            Max Price:
            <br />
            <input type="number" @bind="maxPrice" />

        </text>
    </div>


    <div class="range-column-txt" id="min-text" style="height:12px;">
        <text>
        </text>
    </div>
    <div class="range-column-slider" id="max-slider" style="height:12px;">
        <input type="range" id="slider-input-right" style=@maxWidth min=@maxLimit max="2000000" @bind="maxPrice" @bind:event="oninput" @onfocus="ChangeinMax" @onchange="ChangeMax" step="10000">
    </div>
    <div class="range-column-txt" id="max-text" style="height:12px;">
        <text>
        </text>
    </div>


    @if (minTop == 1)
    {
        <div class="range-column-txt" id="min-text" style="height:12px;">
            <text>
            </text>
        </div>
        <div class="range-column-slider" id="min-slider" style="height:12px;top: -82px;">
            <input type="range" id="slider-input-left" style=@minWidth min="0" max=@minLimit @bind="minPrice" @bind:event="oninput" @onfocus="ChangeinMin" @onchange="ChangeMin" step="10000">
        </div>
        <div class="range-column-txt" id="max-text" style="height:12px;">
            <text>
            </text>
        </div>

    }
    @if (minTop == 0)
    {
        <div class="range-column-txt" id="min-text" style="height:12px;">
            <text>
            </text>
        </div>
        <div class="range-column-slider" id="min-slider" style="height:12px;top: -82px;">
        </div>
        <div class="range-column-txt" id="max-text" style="height:12px;">
            <text>
            </text>
        </div>
    }


    <div class="range-column-prices" style="width: 7%;">
        <text>

        </text>
    </div>
    <div class="range-column-prices" style="width: 17.2%">
        <text>
            $0
        </text>
    </div>
    <div class="range-column-prices" style="width: 17.2%">
        <text>
            $500,000
        </text>
    </div>
    <div class="range-column-prices" style="width: 17.2%">
        <text>

            $1,000,000
        </text>
    </div>
    <div class="range-column-prices" style="width: 17.2%">
        <text>

            $1,500,000
        </text>
    </div>
    <div class="range-column-prices" style="width: 17.2%">
        <text>

            $2,000,000
        </text>
    </div>
    <div class="range-column-prices" style="width: 7%">
        <text>

        </text>
    </div>

    <br />
    <br />
    <br />
    <br />
    <br />
}


@if (sort == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @if (sort.Equals("Ascending"))
    {
        @if (Price_Ascending == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            @foreach (var house in Price_Ascending)
            {
                @if (House_valid(house)) {
                    <div class="House-column">
                        <img src=@ImagePath(@house.Id) alt="Listing#1" style="width:100%"><br /><br />
                        <img class="deets" src="Bed.png">
                        <p1>@house.bedrooms Beds</p1><br />
                        <img class="deets" src="Bath.png">
                        <p1>@house.bathrooms Baths</p1><br />
                        <img class="deets" src="Sqfeet.png">
                        <p1>@FormatInt(@house.sqrft) ft&#178</p1><br />
                        <img class="deets" src="Location.png">
                        <p1>@house.neighborhoods_name</p1><br />
                        <img class="deets" src="price.png">
                        <p1>@FormatInt(@house.price)</p1>

                        @if(@house.Id == 1)
                        {
                            <div class="listings-btn-column">
                                <button type="button" onclick=@Details1>Detailed View</button>
                            </div>
                        }
                        else{
                            @if (@house.Id == 2)
                            {
                                <div class="listings-btn-column">
                                    <button type="button" onclick=@Details2>Detailed View</button>
                                </div>
                            }
                            else
                            {
                                @if (@house.Id == 3)
                                {
                                    <div class="listings-btn-column">
                                        <button type="button" onclick=@Details3>Detailed View</button>
                                    </div>
                                }
                                else
                                {
                                    @if (@house.Id == 4)
                                    {
                                        <div class="listings-btn-column">
                                            <button type="button" onclick=@Details4>Detailed View</button>
                                        </div>
                                    }
                                    else
                                    {
                                        @if (@house.Id == 5)
                                        {
                                            <div class="listings-btn-column">
                                                <button type="button" onclick=@Details5>Detailed View</button>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="listings-btn-column">
                                                <button type="button" >Detailed View</button>
                                            </div>
                                        }
                                    }
                                }
                            }
                        }


                        

                    </div>
                
                }
            }
        }
    }
    @if (sort.Equals("Descending"))
    {
        @if (Price_Descending == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            @foreach (var house in Price_Descending)
            {
                @if (House_valid(house))
                {
                    <div class="House-column">
                        <img src=@ImagePath(@house.Id) alt="Listing#1" style="width:100%"><br /><br />
                        <img class="deets" src="Bed.png">
                        <p1>@house.bedrooms Beds</p1><br />
                        <img class="deets" src="Bath.png">
                        <p1>@house.bathrooms Baths</p1><br />
                        <img class="deets" src="Sqfeet.png">
                        <p1>@FormatInt(@house.sqrft) ft&#178</p1><br />
                        <img class="deets" src="Location.png">
                        <p1>@house.neighborhoods_name</p1><br />
                        <img class="deets" src="price.png">
                        <p1>@FormatInt(@house.price)</p1>

                        @if (@house.Id == 1)
                        {
                            <div class="listings-btn-column">
                                <button type="button" onclick=@Details1>Detailed View</button>
                            </div>
                        }
                        else
                        {
                            @if (@house.Id == 2)
                            {
                                <div class="listings-btn-column">
                                    <button type="button" onclick=@Details2>Detailed View</button>
                                </div>
                            }
                            else
                            {
                                @if (@house.Id == 3)
                                {
                                    <div class="listings-btn-column">
                                        <button type="button" onclick=@Details3>Detailed View</button>
                                    </div>
                                }
                                else
                                {
                                    @if (@house.Id == 4)
                                    {
                                        <div class="listings-btn-column">
                                            <button type="button" onclick=@Details4>Detailed View</button>
                                        </div>
                                    }
                                    else
                                    {
                                        @if (@house.Id == 5)
                                        {
                                            <div class="listings-btn-column">
                                                <button type="button" onclick=@Details5>Detailed View</button>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="listings-btn-column">
                                                <button type="button">Detailed View</button>
                                            </div>
                                        }
                                    }
                                }
                            }
                        }




                    </div>

                }
            }
        }
    }
    @if (sort.Equals("Newest"))
    {
        @if (Year_Descending == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            @foreach (var house in Year_Descending)
            {
                @if (House_valid(house))
                {
                    <div class="House-column">
                        <img src=@ImagePath(@house.Id) alt="Listing#1" style="width:100%"><br /><br />
                        <img class="deets" src="Bed.png">
                        <p1>@house.bedrooms Beds</p1><br />
                        <img class="deets" src="Bath.png">
                        <p1>@house.bathrooms Baths</p1><br />
                        <img class="deets" src="Sqfeet.png">
                        <p1>@FormatInt(@house.sqrft) ft&#178</p1><br />
                        <img class="deets" src="Location.png">
                        <p1>@house.neighborhoods_name</p1><br />
                        <img class="deets" src="price.png">
                        <p1>@FormatInt(@house.price)</p1>

                        @if (@house.Id == 1)
                        {
                            <div class="listings-btn-column">
                                <button type="button" onclick=@Details1>Detailed View</button>
                            </div>
                        }
                        else
                        {
                            @if (@house.Id == 2)
                            {
                                <div class="listings-btn-column">
                                    <button type="button" onclick=@Details2>Detailed View</button>
                                </div>
                            }
                            else
                            {
                                @if (@house.Id == 3)
                                {
                                    <div class="listings-btn-column">
                                        <button type="button" onclick=@Details3>Detailed View</button>
                                    </div>
                                }
                                else
                                {
                                    @if (@house.Id == 4)
                                    {
                                        <div class="listings-btn-column">
                                            <button type="button" onclick=@Details4>Detailed View</button>
                                        </div>
                                    }
                                    else
                                    {
                                        @if (@house.Id == 5)
                                        {
                                            <div class="listings-btn-column">
                                                <button type="button" onclick=@Details5>Detailed View</button>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="listings-btn-column">
                                                <button type="button">Detailed View</button>
                                            </div>
                                        }
                                    }
                                }
                            }
                        }




                    </div>

                }
            }
        }
    }
    @if (sort.Equals("Oldest"))
    {
        @if (Year_Ascending == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            @foreach (var house in Year_Ascending)
            {
                @if (House_valid(house))
                {
                    <div class="House-column">
                        <img src=@ImagePath(@house.Id) alt="Listing#1" style="width:100%"><br /><br />
                        <img class="deets" src="Bed.png">
                        <p1>@house.bedrooms Beds</p1><br />
                        <img class="deets" src="Bath.png">
                        <p1>@house.bathrooms Baths</p1><br />
                        <img class="deets" src="Sqfeet.png">
                        <p1>@FormatInt(@house.sqrft) ft&#178</p1><br />
                        <img class="deets" src="Location.png">
                        <p1>@house.neighborhoods_name</p1><br />
                        <img class="deets" src="price.png">
                        <p1>@FormatInt(@house.price)</p1>

                        @if (@house.Id == 1)
                        {
                            <div class="listings-btn-column">
                                <button type="button" onclick=@Details1>Detailed View</button>
                            </div>
                        }
                        else
                        {
                            @if (@house.Id == 2)
                            {
                                <div class="listings-btn-column">
                                    <button type="button" onclick=@Details2>Detailed View</button>
                                </div>
                            }
                            else
                            {
                                @if (@house.Id == 3)
                                {
                                    <div class="listings-btn-column">
                                        <button type="button" onclick=@Details3>Detailed View</button>
                                    </div>
                                }
                                else
                                {
                                    @if (@house.Id == 4)
                                    {
                                        <div class="listings-btn-column">
                                            <button type="button" onclick=@Details4>Detailed View</button>
                                        </div>
                                    }
                                    else
                                    {
                                        @if (@house.Id == 5)
                                        {
                                            <div class="listings-btn-column">
                                                <button type="button" onclick=@Details5>Detailed View</button>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="listings-btn-column">
                                                <button type="button">Detailed View</button>
                                            </div>
                                        }
                                    }
                                }
                            }
                        }




                    </div>

                }
            }

        }
    }
}


@if (NoReults(all_houses)) {
    <div class="error-msg">No results for your filter</div>
}





@code {
    [Parameter] public string data { get; set; }

    Boolean Apartment = false;
    Boolean Condominium = false;
    Boolean Detached = false;
    Boolean Duplex = false;
    string minBeds = "1";
    string maxBeds = "8";
    string minBaths = "1";
    string maxBaths = "8";
    string squareft = "500+";
    string minPrice = "0";
    string maxPrice = "2000000";
    string minLimit = "1950000";
    string minWidth = "width: 97.5%;";
    string link = "yo";

    
    void Details1()
    {
        NavManager.NavigateTo("Details/House1");
    }
    void Details2()
    {
        NavManager.NavigateTo("Details/House2");
    }
    void Details3()
    {
        NavManager.NavigateTo("Details/House3");
    }
    void Details4()
    {
        NavManager.NavigateTo("Details/House4");
    }
    void Details5()
    {
        NavManager.NavigateTo("Details/House5");
    }



    Boolean NoReults(House[] everyhouse){

        if(everyhouse == null){ return true; }
        else{
            for (int i = 0; i < everyhouse.Length; i++)
            {
                if (House_valid(everyhouse[i]))
                {
                    return false;
                }
            }
            return true;
        }


    }


    string maxLimit = "50000";
    string maxWidth = "width: 97.5%;";

    int minTop = 1;
    double temp;


    Boolean filterDispBool = false;

    int path1bool;
    int path2bool;
    int path3bool;
    int path4bool;
    int path5bool;
    int path6bool;
    int path7bool;
    int path8bool;
    int path9bool;
    int path10bool;
    int path11bool;
    int path12bool;
    int path13bool;
    int path14bool;
    int path15bool;
    int path16bool;
    int path17bool;
    int path18bool;
    int path19bool;
    int path20bool;
    int path21bool;
    int path22bool;
    int path23bool;



    Boolean House_valid(House house) {

        if (house.dwelling == 1)
        {
            if (!Apartment)
            {
                return false;
            }
        }

        if (house.dwelling == 2)
        {
            if (!Condominium)
            {
                return false;
            }
        }

        if (house.dwelling == 3)
        {
            if (!Detached)
            {
                return false;
            }
        }

        if (house.dwelling == 4)
        {
            if (!Duplex)
            {
                return false;
            }
        }

        if (house.bedrooms < Int32.Parse(minBeds)) { return false; }
        if (house.bedrooms > Int32.Parse(maxBeds)) { return false; }
        if (house.bathrooms < Int32.Parse(minBaths)) { return false; }
        if (house.bathrooms > Int32.Parse(maxBaths)) { return false; }
        if (house.bathrooms > Int32.Parse(maxBaths)) { return false; }
        if (house.sqrft < Int32.Parse(squareft.Substring(0, squareft.Length - 1))) { return false; }
        if (house.price < Int32.Parse(minPrice)) { return false; }
        if (house.price > Int32.Parse(maxPrice)) { return false; }

        if (house.neighbornumber == 1) { if (path1bool == 0) { return false; } }
        if (house.neighbornumber == 2) { if (path2bool == 0) { return false; } }
        if (house.neighbornumber == 3) { if (path3bool == 0) { return false; } }
        if (house.neighbornumber == 4) { if (path4bool == 0) { return false; } }
        if (house.neighbornumber == 5) { if (path5bool == 0) { return false; } }
        if (house.neighbornumber == 6) { if (path6bool == 0) { return false; } }
        if (house.neighbornumber == 7) { if (path7bool == 0) { return false; } }
        if (house.neighbornumber == 8) { if (path8bool == 0) { return false; } }
        if (house.neighbornumber == 9) { if (path9bool == 0) { return false; } }
        if (house.neighbornumber == 10) { if (path10bool == 0) { return false; } }
        if (house.neighbornumber == 11) { if (path11bool == 0) { return false; } }
        if (house.neighbornumber == 12) { if (path12bool == 0) { return false; } }
        if (house.neighbornumber == 13) { if (path13bool == 0) { return false; } }
        if (house.neighbornumber == 14) { if (path14bool == 0) { return false; } }
        if (house.neighbornumber == 15) { if (path15bool == 0) { return false; } }
        if (house.neighbornumber == 16) { if (path16bool == 0) { return false; } }
        if (house.neighbornumber == 17) { if (path17bool == 0) { return false; } }
        if (house.neighbornumber == 18) { if (path18bool == 0) { return false; } }
        if (house.neighbornumber == 19) { if (path19bool == 0) { return false; } }
        if (house.neighbornumber == 20) { if (path20bool == 0) { return false; } }
        if (house.neighbornumber == 21) { if (path21bool == 0) { return false; } }
        if (house.neighbornumber == 22) { if (path22bool == 0) { return false; } }
        if (house.neighbornumber == 23) { if (path23bool == 0) { return false; } }

        return true;

    }

    void filterShow()
    {
        if (filterDispBool)
        {
            filterDispBool = false;

        }
        else
        {
            filterDispBool = true;
        }
    }



    protected override void OnParametersSet()
    {
        if (data != null)
        {
            if (data.ElementAt(0) == '1')
            {
                Apartment = true;
            }
            else
            {
                Apartment = false;
            }
            if (data.ElementAt(1) == '1')
            {
                Condominium = true;
            }
            else
            {
                Condominium = false;
            }
            if (data.ElementAt(2) == '1')
            {
                Detached = true;
            }
            else
            {
                Detached = false;
            }
            if (data.ElementAt(3) == '1')
            {
                Duplex = true;
            }
            else
            {
                Duplex = false;
            }
            minBeds = data.ElementAt(4).ToString();
            maxBeds = data.ElementAt(5).ToString();
            minBaths = data.ElementAt(6).ToString();
            maxBaths = data.ElementAt(7).ToString();
            int i = 0;
            if (data.ElementAt(8) == '5')
            {
                squareft = "500+";
                i = 12;
            }
            else
            {
                squareft = data.Substring(8, 5);
                i = 13;
            }
            while (data.ElementAt(i) != '$')
            {
                i++;
            }
            if (data.ElementAt(8) == '5')
            {
                minPrice = data.Substring(12, i - 12);
                maxLimit = (Int64.Parse(minPrice) + 50000).ToString();
                temp = (100.00 - (((double)(Int64.Parse(maxLimit)) / 2000000.00) * 100.00));
                maxWidth = "width: " + temp.ToString() + "%;";
            }
            else
            {
                minPrice = data.Substring(13, i - 13);
                maxLimit = (Int64.Parse(minPrice) + 50000).ToString();
                temp = (100.00 - (((double)(Int64.Parse(maxLimit)) / 2000000.00) * 100.00));
                maxWidth = "width: " + temp.ToString() + "%;";
            }
            i++;
            int j = i;
            while (data.ElementAt(i) != '$')
            {
                i++;
            }
            if (data.ElementAt(8) == '5')
            {
                maxPrice = data.Substring(j, i - j);
                minTop = 1;
                minLimit = (Int64.Parse(maxPrice) - 50000).ToString();
                temp = ((((double)(Int64.Parse(minLimit)) / 2000000.00) * 100.00));
                minWidth = "width: " + temp.ToString() + "%;";
            }
            else
            {
                maxPrice = data.Substring(j, i - j);
                minTop = 1;
                minLimit = (Int64.Parse(maxPrice) - 50000).ToString();
                temp = ((((double)(Int64.Parse(minLimit)) / 2000000.00) * 100.00));
                minWidth = "width: " + temp.ToString() + "%;";
            }

            i++;

            if (data.ElementAt(i) == '0') { path1bool = 0; i++; }
            else { path1bool = 1; i++; }
            if (data.ElementAt(i) == '0') { path2bool = 0; i++; }
            else { path2bool = 1; i++; }
            if (data.ElementAt(i) == '0') { path3bool = 0; i++; }
            else { path3bool = 1; i++; }
            if (data.ElementAt(i) == '0') { path4bool = 0; i++; }
            else { path4bool = 1; i++; }
            if (data.ElementAt(i) == '0') { path5bool = 0; i++; }
            else { path5bool = 1; i++; }
            if (data.ElementAt(i) == '0') { path6bool = 0; i++; }
            else { path6bool = 1; i++; }
            if (data.ElementAt(i) == '0') { path7bool = 0; i++; }
            else { path7bool = 1; i++; }
            if (data.ElementAt(i) == '0') { path8bool = 0; i++; }
            else { path8bool = 1; i++; }
            if (data.ElementAt(i) == '0') { path9bool = 0; i++; }
            else { path9bool = 1; i++; }
            if (data.ElementAt(i) == '0') { path10bool = 0; i++; }
            else { path10bool = 1; i++; }
            if (data.ElementAt(i) == '0') { path11bool = 0; i++; }
            else { path11bool = 1; i++; }
            if (data.ElementAt(i) == '0') { path12bool = 0; i++; }
            else { path12bool = 1; i++; }
            if (data.ElementAt(i) == '0') { path13bool = 0; i++; }
            else { path13bool = 1; i++; }
            if (data.ElementAt(i) == '0') { path14bool = 0; i++; }
            else { path14bool = 1; i++; }
            if (data.ElementAt(i) == '0') { path15bool = 0; i++; }
            else { path15bool = 1; i++; }
            if (data.ElementAt(i) == '0') { path16bool = 0; i++; }
            else { path16bool = 1; i++; }
            if (data.ElementAt(i) == '0') { path17bool = 0; i++; }
            else { path17bool = 1; i++; }
            if (data.ElementAt(i) == '0') { path18bool = 0; i++; }
            else { path18bool = 1; i++; }
            if (data.ElementAt(i) == '0') { path19bool = 0; i++; }
            else { path19bool = 1; i++; }
            if (data.ElementAt(i) == '0') { path20bool = 0; i++; }
            else { path20bool = 1; i++; }
            if (data.ElementAt(i) == '0') { path21bool = 0; i++; }
            else { path21bool = 1; i++; }
            if (data.ElementAt(i) == '0') { path22bool = 0; i++; }
            else { path22bool = 1; i++; }
            if (data.ElementAt(i) == '0') { path23bool = 0; i++; }
            else { path23bool = 1; i++; }





        }

    }


    string SelectMinBed
    {
        get => minBeds;
        set { minBeds = value; }
    }

    string SelectMaxBed
    {
        get => maxBeds;
        set { maxBeds = value; }
    }

    string SelectMinBaths
    {
        get => minBaths;
        set { minBaths = value; }
    }

    string SelectMaxBaths
    {
        get => maxBaths;
        set { maxBaths = value; }
    }

    string SelectSquareft
    {
        get => squareft;
        set { squareft = value; }
    }


    List<Sqft> SqftList = new List<Sqft>() { new Sqft("500+"), new Sqft("1000+"), new Sqft("1500+"), new Sqft("2000+"), new Sqft("2500+"), new Sqft("3000+") };

    public class Sqft
    {

        public Sqft(string sqfeet)
        {
            Sqfeet = sqfeet;
        }
        public string Sqfeet { get; set; }

    }


    List<Numbs> NumbList = new List<Numbs>() { new Numbs("1"), new Numbs("2"), new Numbs("3"), new Numbs("4"), new Numbs("5"), new Numbs("6"), new Numbs("7"), new Numbs("8") };

    public class Numbs
    {

        public Numbs(string number)
        {
            Number = number;
        }
        public string Number { get; set; }

    }






    void ChangeMin()
    {
        maxLimit = (Int64.Parse(minPrice) + 50000).ToString();
        temp = (100.00 - (((double)(Int64.Parse(maxLimit)) / 2000000.00) * 100.00));
        maxWidth = "width: " + temp.ToString() + "%;";


    }


    void ChangeMax()
    {

        minTop = 1;
        minLimit = (Int64.Parse(maxPrice) - 50000).ToString();
        temp = ((((double)(Int64.Parse(minLimit)) / 2000000.00) * 100.00));
        minWidth = "width: " + temp.ToString() + "%;";


    }


    async Task ChangeinMin()
    {
        minTop = 1;
    }

    async Task ChangeinMax()
    {
        minTop = 0;
    }


    string SelectMinPrice
    {
        get => String.Format("{0:n0}", Int64.Parse(minPrice));
        set { minPrice = value; }
    }

    string SelectMaxPrice
    {
        get => String.Format("{0:n0}", Int64.Parse(maxPrice));
        set { maxPrice = value; }
    }















    public House[] all_houses;
    public House[] Price_Ascending;
    public House[] Price_Descending;
    public House[] Year_Ascending;
    public House[] Year_Descending;
    public string sort {get;set;}

    protected override async Task OnInitializedAsync()
    {
        all_houses = await Http.GetFromJsonAsync<House[]>("Houses.json");
        sort = "Ascending";
        Price_Ascending = all_houses.OrderBy(House => House.price).ToArray();
        Price_Descending = all_houses.OrderBy(House => House.price).ToArray();
        Array.Reverse(Price_Descending);
        Year_Ascending = all_houses.OrderBy(House => House.year).ToArray();
        Year_Descending = all_houses.OrderBy(House => House.year).ToArray();
        Array.Reverse(Year_Descending);

    }

    string ImagePath(int i) {
        return "House Images/house" + (i).ToString() + "_1.jpg";
    }

    string FormatInt(int var)
    {
        return String.Format("{0:n0}", Int64.Parse(var.ToString()));
    }






    public class House
    {

        public int Id { get; set; }

        public int dwelling { get; set; }

        public int bedrooms { get; set; }

        public int bathrooms { get; set; }

        public int sqrft { get; set; }

        public int price { get; set; }

        public int neighbornumber { get; set; }

        public string? neighborhoods_name { get; set; }

        public int year { get; set; }

    }


}
