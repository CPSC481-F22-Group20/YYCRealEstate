@page "/map/{data}"
<PageTitle>MAP</PageTitle>

@inject NavigationManager NavManager

<h1 class="page-title">YYC REAL ESTATES</h1>
<button type="button" class="collapsible" @onclick=@filterShow>Filters</button> <br />

@if (filterDispBool) {


    <div class="row">
        <div class="column">
            <filter-title class="italic-title" style="align-content:center;">
                Dwellings
                <br />
                <div class="column" style="width:100%;">
                    <text>
                        <label class="container">
                            Apartment
                            <input type="checkbox" @bind=Apartment>
                            <span class="checkmark"></span>
                        </label>

                        <label class="container">
                            Condominium
                            <input type="checkbox" @bind=Condominium>
                            <span class="checkmark"></span>
                        </label>

                        <label class="container">
                            Detached
                            <input type="checkbox" @bind=Detached>
                            <span class="checkmark"></span>
                        </label>

                        <label class="container">
                            Duplex
                            <input type="checkbox" @bind=Duplex>
                            <span class="checkmark"></span>
                        </label>
                    </text>
                </div>
            </filter-title>
        </div>
        <div class="column">
            <filter-title class="italic-title">
                Bedrooms
                <br>
                <text>
                    Min:
                    <select class="filter" @bind="@SelectMinBed">

                        @foreach (var beds in NumbList)
                        {

                            <option value="@beds.Number"> @beds.Number </option>
                        }

                    </select>
                    <br>
                    Max:
                    <select class="filter" @bind="@SelectMaxBed">

                        @foreach (var beds in NumbList)
                        {

                            <option value="@beds.Number"> @beds.Number </option>
                        }

                    </select>
                </text>
            </filter-title>
        </div>
        <div class="column">
            <filter-title class="italic-title">
                Bathrooms
                <br>
                <text>
                    Min:
                    <select class="filter" @bind="@SelectMinBaths">

                        @foreach (var numbs in NumbList)
                        {

                            <option value="@numbs.Number"> @numbs.Number </option>
                        }

                    </select>
                    <br>
                    Max:
                    <select class="filter" @bind="@SelectMaxBaths">

                        @foreach (var beds in NumbList)
                        {

                            <option value="@beds.Number"> @beds.Number </option>
                        }

                    </select>
                </text>
            </filter-title>
        </div>
        <div class="column">
            <filter-title class="italic-title">
                SquareFeet
                <br>
                <text>
                    Select one:
                    <select class="filter" @bind="@SelectSquareft">

                        @foreach (var numbs in SqftList)
                        {

                            <option value="@numbs.Sqfeet"> @numbs.Sqfeet </option>
                        }

                    </select>
                </text>
            </filter-title>
        </div>
    </div>

    <div>
        <h1 class="range-price">
            Price Range
            <br />
            <text class="range-prices">$@SelectMinPrice - $@SelectMaxPrice</text>
        </h1>
    </div>

    <div class="range-column-txt" id="min-text">
        <text>
            Min Price:
            <br />
            <input type="number" @bind="minPrice" />
        </text>
    </div>
    <div class="range-column-slider" id="min-slider">
        <input type="range" id="slider-input-left" style=@minWidth min="0" max=@minLimit @bind="minPrice" @bind:event="oninput" @onfocus="ChangeinMin" @onchange="ChangeMin" step="10000">
    </div>
    <div class="range-column-txt" id="max-text">
        <text>
            Max Price:
            <br />
            <input type="number" @bind="maxPrice" />

        </text>
    </div>


    <div class="range-column-txt" id="min-text" style="height:12px;">
        <text>
        </text>
    </div>
    <div class="range-column-slider" id="max-slider" style="height:12px;">
        <input type="range" id="slider-input-right" style=@maxWidth min=@maxLimit max="2000000" @bind="maxPrice" @bind:event="oninput" @onfocus="ChangeinMax" @onchange="ChangeMax" step="10000">
    </div>
    <div class="range-column-txt" id="max-text" style="height:12px;">
        <text>
        </text>
    </div>


    @if (minTop == 1)
    {
        <div class="range-column-txt" id="min-text" style="height:12px;">
            <text>
            </text>
        </div>
        <div class="range-column-slider" id="min-slider" style="height:12px;top: -82px;">
            <input type="range" id="slider-input-left" style=@minWidth min="0" max=@minLimit @bind="minPrice" @bind:event="oninput" @onfocus="ChangeinMin" @onchange="ChangeMin" step="10000">
        </div>
        <div class="range-column-txt" id="max-text" style="height:12px;">
            <text>
            </text>
        </div>

    }
    @if (minTop == 0)
    {
        <div class="range-column-txt" id="min-text" style="height:12px;">
            <text>
            </text>
        </div>
        <div class="range-column-slider" id="min-slider" style="height:12px;top: -82px;">
        </div>
        <div class="range-column-txt" id="max-text" style="height:12px;">
            <text>
            </text>
        </div>
    }


    <div class="range-column-prices" style="width: 7%;">
        <text>

        </text>
    </div>
    <div class="range-column-prices" style="width: 17.2%">
        <text>
            $0
        </text>
    </div>
    <div class="range-column-prices" style="width: 17.2%">
        <text>
            $500,000
        </text>
    </div>
    <div class="range-column-prices" style="width: 17.2%">
        <text>

            $1,000,000
        </text>
    </div>
    <div class="range-column-prices" style="width: 17.2%">
        <text>

            $1,500,000
        </text>
    </div>
    <div class="range-column-prices" style="width: 17.2%">
        <text>

            $2,000,000
        </text>
    </div>
    <div class="range-column-prices" style="width: 7%">
        <text>

        </text>
    </div>

    <br />
    <br />
    <br />
    <br />
    <br />
}

<div class="mapdiv" style="background-image: url(./Calgary_map.jpg);    background-size: 100% 100%;">

    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 269 406" version="1.0">
        <g transform="translate(-240.5,-329.36218)">
            <a @onclick=@Path1 @onmouseover=@mouseover1 @onmouseout=@mouseout1>
                <path style=@path1style d="M 269.41483,374.94657 L 269.41483,341.72218 L 340.71257,341.72218 L 342.14929,344.05686 L 342.14929,358.60376 L 345.02275,364.53027 L 350.05131,369.73842 L 351.48804,371.71392 L 354.3615,372.97106 L 360.10842,374.94657 L 366.5737,378.89757 L 369.98594,384.6445 L 371.42267,387.33836 L 370.52472,388.05672 L 367.65125,389.13427 L 364.05942,389.31386 L 358.67169,387.33836 L 352.02681,387.33836 L 351.30845,388.23631 L 349.87172,388.23631 L 350.05131,391.28937 L 350.76968,392.54651 L 350.76968,396.49752 L 348.79417,399.90975 L 341.79011,406.73422 L 341.79011,409.24849 L 340.89215,409.42808 L 340.71257,414.27705 L 341.9697,414.45664 L 341.79011,419.48519 L 337.47992,426.84844 L 317.54529,414.09746 L 322.75343,406.01586 L 322.93303,399.90975 L 319.87997,393.98324 L 318.26366,393.98324 L 317.90448,395.41997 L 314.67183,395.24038 L 311.97796,394.34242 L 304.25554,388.05672 L 294.37802,388.05672 L 288.27191,384.4649 L 284.85968,381.41185 L 282.88418,378.53839 L 279.29235,374.94657 L 269.41483,374.94657 z" id="Calgary_Foothills" inkscape:label="#path2553" />
            </a>
            <a @onclick=@Path2 @onmouseover=@mouseover2 @onmouseout=@mouseout2>
                <path style=@path2style d="M 348.87375,400.02144 L 353.31841,402.43425 L 358.39802,402.43425 L 359.28695,401.16435 L 365.25549,401.16435 L 366.14442,400.02144 L 373.50985,400.14843 L 379.22441,394.43387 L 381.25626,394.43387 L 390.01858,400.27542 L 392.30441,401.16435 L 397.13003,403.19619 L 405.2574,409.79968 L 405.2574,403.19619 L 415.03565,387.5764 L 422.65506,378.05213 L 436.49699,364.08321 L 437.51291,360.78147 L 437.51291,341.85993 L 340.36541,341.85993 L 342.14327,344.27274 L 342.14327,358.74962 L 345.19104,364.71816 L 350.08016,369.86127 L 351.63579,371.89311 L 360.17588,375.00436 L 366.58889,379.00456 L 371.41451,387.38591 L 370.2716,388.1796 L 367.60481,389.16377 L 364.01733,389.32251 L 358.62026,387.32241 L 351.92152,387.25892 L 351.28657,388.1796 L 349.73094,388.33834 L 350.04841,391.4496 L 350.81036,392.59251 L 350.81036,396.40221 L 348.87375,400.02144 z" id="Calgary_MacKay" inkscape:label="#path3325"/>
            </a>
    	    <a @onclick=@Path3 @onmouseover=@mouseover3 @onmouseout=@mouseout3>
                <path style=@path3style d="M 437.44942,341.92342 L 501.76995,341.92342 L 501.76995,442.56316 L 451.41834,442.56316 L 451.41834,458.50043 L 413.25778,458.50043 L 410.21003,452.3414 L 409.00362,442.18218 L 408.17818,442.18218 L 408.05119,439.4519 L 406.14634,436.97559 L 405.3209,434.1818 L 405.3209,403.19619 L 415.0039,387.5764 L 422.71856,378.05213 L 436.46525,364.11496 L 437.44942,360.71797 L 437.44942,341.92342 z" id="Calgary_McCall" inkscape:label="#path3327" />
            </a>
            <a @onclick=@Path4 @onmouseover=@mouseover4 @onmouseout=@mouseout4>
                <path style=@path4style d="M 450.90684,458.77129 L 467.8269,458.77129 L 467.8269,476.00702 L 485.06263,476.00702 L 485.06263,458.77129 L 488.78756,458.77129 L 489.0401,458.77129 L 489.0401,462.87504 L 490.99727,462.87504 L 490.99727,464.07459 L 493.01758,464.07459 L 493.01758,458.64502 L 501.03566,458.64502 L 501.03566,442.79825 L 450.78057,442.79825 L 450.78057,458.77129 L 450.90684,458.77129 z" id="Calgary_Cross" inkscape:label="#path3331"/>
    	    </a>
    	    <a @onclick=@Path5 @onmouseover=@mouseover5 @onmouseout=@mouseout5>
                <path style=@path5style d="M 279.21963,374.94087 L 252.23421,374.94087 L 252.23421,434.43578 L 256.55188,434.43578 L 264.48877,439.4519 L 270.26682,439.4519 L 276.55283,429.92763 L 276.55283,424.91152 L 272.42566,418.37152 L 272.36216,416.21269 L 276.36235,413.10142 L 276.36235,411.32357 L 275.47341,411.26007 L 275.53692,409.22823 L 279.5371,409.22823 L 283.34682,412.33949 L 285.50564,412.33949 L 285.50564,415.13327 L 288.6804,416.40317 L 290.96622,416.40317 L 291.47419,414.37133 L 293.69651,414.24434 L 308.99883,425.35598 L 309.82427,425.35598 L 310.77669,422.24472 L 317.63416,414.05385 L 322.68203,406.05347 L 322.90426,399.89445 L 319.76125,393.95765 L 318.20563,393.9259 L 317.76115,395.3863 L 314.39591,395.19581 L 311.91961,394.30688 L 304.1732,388.05261 L 294.29971,387.98912 L 288.17244,384.3699 L 284.8072,381.32213 L 282.61662,378.27436 L 279.21963,374.94087 z" id="Calgary_North_West" inkscape:label="#path3333"/>
    	    </a>
    	    <a @onclick=@Path6 @onmouseover=@mouseover6 @onmouseout=@mouseout6>
                <path style=@path6style d="M 252.04373,434.37228 L 249.50392,434.43578 L 243.15442,437.35656 L 243.15442,458.43693 L 268.42546,458.43693 L 268.42546,466.6278 L 302.77631,466.6278 L 309.82427,473.73924 L 312.0466,474.75517 L 313.88796,475.77109 L 317.76115,479.70779 L 319.60251,483.83497 L 319.60251,508.78855 L 327.72989,508.78855 L 327.72989,500.85166 L 336.68269,500.85166 L 336.68269,488.85108 L 333.06348,487.77167 L 330.0792,485.67633 L 327.92037,480.8507 L 327.41241,479.32681 L 324.93611,476.78701 L 319.66601,475.6441 L 319.66601,465.42139 L 320.87242,465.42139 L 323.41222,463.45304 L 324.80911,463.51653 L 328.8093,468.40566 L 328.8093,458.43693 L 317.57067,458.43693 L 317.57067,456.2781 L 309.50679,452.46839 L 303.60175,447.57927 L 299.66505,440.59481 L 300.74447,438.81694 L 301.6969,433.35636 L 306.64951,433.35636 L 307.60194,432.14995 L 307.60194,428.34025 L 308.61786,428.34025 L 308.61786,425.03851 L 293.69651,414.24434 L 291.3472,414.49832 L 290.90273,416.40317 L 288.42642,416.40317 L 285.44215,415.13327 L 285.44215,412.40298 L 283.28331,412.40298 L 279.47361,409.22823 L 275.53692,409.22823 L 275.40992,411.19658 L 276.42584,411.32357 L 276.29885,413.29191 L 272.42566,416.27618 L 272.36216,418.43502 L 276.55283,424.97501 L 276.55283,429.99112 L 270.20333,439.4519 L 264.55226,439.4519 L 256.48839,434.43578 L 252.04373,434.37228 z" id="Calgary_Bow" inkscape:label="#path3355"/>
    	    </a>
    	    <a @onclick=@Path7 @onmouseover=@mouseover7 @onmouseout=@mouseout7>
                <path style=@path7style d="M 269.01625,466.91565 L 269.01625,541.85634 L 320.97597,541.85634 L 320.02895,539.9623 L 320.02895,531.81795 L 324.06956,531.81795 L 328.29958,530.68153 L 336.19139,526.26211 L 336.19139,521.84269 L 337.07528,521.84269 L 337.07528,516.79193 L 333.91855,516.79193 L 333.91855,518.7491 L 330.00421,518.7491 L 330.00421,516.85506 L 319.90268,516.85506 L 319.90268,484.02511 L 318.00865,479.85823 L 314.22058,476.07015 L 309.92743,473.73418 L 303.1089,466.85251 L 269.01625,466.91565 z" id="Calgary_West" inkscape:label="#path3357"/>
    	    </a>
    	    <a @onclick=@Path8 @onmouseover=@mouseover8 @onmouseout=@mouseout8>
                <path style=@path8style d="M 321.03911,541.98261 L 336.00199,541.98261 L 336.00199,555.99847 L 337.01214,555.99847 L 337.01214,558.90266 L 335.81259,558.90266 L 335.81259,560.92297 L 337.89603,562.69074 L 338.0223,564.14283 L 339.09558,565.02671 L 345.28277,566.03687 L 349.13397,567.86777 L 351.84876,570.89822 L 353.04832,570.89822 L 354.05847,566.79448 L 356.14191,564.96358 L 359.86685,563.06954 L 366.1803,556.75609 L 367.06418,557.82938 L 367.00105,559.78655 L 366.05403,559.78655 L 366.05403,565.9106 L 359.10923,566.98388 L 357.84654,568.94105 L 360.18252,572.8554 L 362.96044,572.8554 L 367.19045,574.62316 L 367.19045,575.94899 L 377.98646,575.94899 L 377.98646,558.83953 L 387.07783,558.83953 L 387.07783,547.66472 L 395.09592,524.93628 L 396.04293,524.93628 L 396.04293,520.83254 L 394.96965,520.83254 L 394.96965,513.69834 L 395.9798,513.69834 L 395.9798,512.68818 L 393.95949,510.79415 L 390.80277,510.79415 L 389.85575,511.74117 L 389.85575,514.14028 L 391.05613,514.83332 L 391.93919,514.83332 L 391.93919,519.06477 L 384.74185,519.06477 L 383.85797,519.94866 L 378.93347,519.94866 L 378.93347,521.84269 L 376.5975,521.84269 L 373.69331,524.93628 L 369.8421,524.93628 L 369.8421,528.85062 L 371.04166,529.98705 L 371.04166,532.13362 L 371.98868,532.13362 L 371.98868,533.90139 L 370.91539,533.90139 L 370.91539,535.98483 L 369.90524,536.80558 L 372.17808,539.14155 L 376.21869,541.91947 L 352.92205,541.91947 L 352.92205,517.92835 L 338.84305,525.8833 L 336.19139,525.8833 L 336.12826,526.32524 L 328.39428,530.6105 L 324.04589,531.56541 L 319.7488,531.56541 L 319.7488,540.08857 L 321.03911,541.98261 z" id="Calgary_Elbow" inkscape:label="#path3359"/>
    	    </a>
    	    <a @onclick=@Path9 @onmouseover=@mouseover9 @onmouseout=@mouseout9>
                <path style=@path9style d="M 500.97253,458.58189 L 500.97253,508.90011 L 467.89003,508.90011 L 467.89003,500.81889 L 469.08959,499.93501 L 469.08959,496.84142 L 470.03661,496.84142 L 470.03661,488.88646 L 468.96332,488.88646 L 467.8269,475.88075 L 484.99949,475.88075 L 484.99949,458.64502 L 489.0401,458.64502 L 489.0401,462.74877 L 490.93414,462.74877 L 490.93414,464.07459 L 493.01758,464.07459 L 493.01758,458.64502 L 500.97253,458.58189 z" id="Calgary_Montrose" inkscape:label="#path3361"/>
    	    </a>
    	    <a @onclick=@Path10 @onmouseover=@mouseover10 @onmouseout=@mouseout10>
                <path style=@path10style d="M 500.90939,508.90011 L 500.90939,575.94899 L 430.8932,575.94899 L 426.78945,574.05495 L 425.7793,573.80241 L 421.17048,568.87792 L 419.84465,566.98388 L 421.99123,564.71104 L 421.99123,561.86999 L 420.60227,559.78655 L 416.81419,555.93534 L 416.81419,551.8316 L 418.89763,549.62189 L 420.22346,549.62189 L 422.18063,547.98039 L 422.1175,544.94993 L 429.06229,537.56319 L 429.06229,535.73229 L 409.80626,503.91248 L 407.91223,502.71293 L 407.91223,500.75576 L 416.18285,503.78621 L 421.92809,503.78621 L 422.81198,502.90233 L 428.11528,502.90233 L 430.19872,505.17517 L 430.00931,506.87981 L 428.05214,509.65773 L 428.05214,511.9937 L 432.28216,515.90805 L 433.98679,515.90805 L 436.07023,517.92835 L 450.90684,517.92835 L 450.90684,501.0083 L 467.89003,501.0083 L 467.89003,508.83698 L 500.90939,508.90011 z" id="Calgary_Fort" inkscape:label="#path3363"/>
    	    </a>
    	    <a @onclick=@Path11 @onmouseover=@mouseover11 @onmouseout=@mouseout11>
                <path style=@path11style d="M 500.90939,575.94899 L 500.90939,641.79831 L 506.02329,641.79831 L 506.02329,717.85325 L 501.36161,719.95147 L 493.9646,720.84274 L 481.9059,720.84274 L 477.92842,724.94649 L 477.92842,726.14604 L 476.85514,727.09306 L 473.06706,731.95442 L 471.74124,731.95442 L 469.91034,729.68158 L 469.91034,724.75708 L 469.08959,724.75708 L 469.08959,722.92618 L 467.44809,722.92618 L 463.21808,716.9284 L 461.89225,716.86527 L 460.94523,717.93855 L 457.91478,717.93855 L 455.01059,715.79198 L 448.12892,703.85955 L 448.06579,701.52358 L 444.9722,698.93506 L 443.26756,691.86399 L 441.8786,691.86399 L 441.8786,682.45695 L 438.97442,680.87858 L 436.95411,680.87858 L 434.11306,678.66887 L 431.14573,674.56513 L 431.14573,667.62033 L 433.98679,665.53689 L 434.04992,662.12763 L 429.06229,660.73867 L 429.88304,658.90777 L 430.00931,656.69806 L 434.30246,653.857 L 438.15367,653.857 L 442.95189,648.67997 L 442.95189,646.9122 L 446.04548,642.99786 L 446.04548,641.2301 L 446.86623,639.84114 L 444.02518,635.73739 L 444.02518,628.54005 L 436.07023,623.04735 L 432.66096,623.04735 L 425.14795,614.71359 L 423.06451,611.8094 L 423.06451,604.92774 L 420.91794,601.70788 L 420.91794,591.98516 L 450.96998,591.98516 L 450.96998,575.93361 L 500.90939,575.94899 z" id="Calgary_Hays" inkscape:label="#path3365" />
    	    </a>
    	    <a @onclick=@Path12 @onmouseover=@mouseover12 @onmouseout=@mouseout12>
                <path style=@path12style d="M 442.31632,692.91289 L 370.07574,692.91289 L 370.07574,666.87217 L 366.93289,663.90891 L 366.93289,656.54567 L 365.85534,656.54567 L 365.85534,650.52936 L 380.04305,650.52936 L 383.45529,652.68445 L 388.57363,652.68445 L 389.292,651.33752 L 387.2267,645.6804 L 387.2267,643.5253 L 386.23895,643.5253 L 386.23895,638.67633 L 388.30425,633.37839 L 392.25526,633.37839 L 393.15322,634.63553 L 394.76954,634.63553 L 397.01442,632.48044 L 398.45115,632.48044 L 401.05523,634.45594 L 401.23482,636.70084 L 403.30012,636.61104 L 405.54501,638.67633 L 406.35318,639.57429 L 406.17358,640.92122 L 405.18583,641.63959 L 405.09604,642.89673 L 408.14908,643.70489 L 408.14908,644.96203 L 411.38173,649.27222 L 411.38173,651.6967 L 414.25519,653.762 L 415.15315,652.95384 L 418.20619,654.92935 L 418.20619,657.8926 L 420.36129,659.68851 L 426.4674,659.68851 L 427.27556,658.61097 L 429.70003,660.94565 L 429.3633,661.66401 L 434.39186,662.96606 L 434.39186,666.40074 L 431.5184,668.42113 L 431.5184,675.58234 L 434.57145,679.75784 L 437.28776,681.73334 L 439.33061,681.84559 L 442.38367,683.48435 L 442.31632,692.91289 z" id="Calgary_Shaw" inkscape:label="#path3367"/>
    	    </a>
    	    <a @onclick=@Path13 @onmouseover=@mouseover13 @onmouseout=@mouseout13>
                <path style=@path13style d="M 370.06697,678.85772 L 358.01339,678.85772 L 358.01339,684.01397 L 348.88393,684.01397 L 348.88393,678.92468 L 344.01786,678.92468 L 344.01786,679.95147 L 336.875,679.95147 L 336.875,674.86218 L 286.91964,674.86218 L 286.91964,641.69254 L 335.98214,641.69254 L 335.98214,608.88004 L 376.96429,608.88004 L 376.96429,614.99611 L 376.07143,615.93361 L 376.07143,619.05861 L 377.05357,622.00504 L 379.0625,622.00504 L 380.04464,623.92468 L 380.04464,625.88897 L 382.00893,627.8979 L 385.40179,627.8979 L 386.07143,628.79075 L 387.23214,628.79075 L 389.0625,630.93361 L 388.03572,631.91575 L 388.03572,633.03182 L 386.07143,637.98718 L 386.07143,642.8979 L 387.09822,642.8979 L 387.09822,644.90682 L 389.19643,650.57647 L 388.52679,651.9604 L 383.39286,651.91575 L 379.91072,649.81754 L 365.80357,649.81754 L 365.80357,655.79968 L 367.00893,655.79968 L 367.00893,663.07647 L 370.08929,666.15682 L 370.06697,678.85772 z" id="Calgary_Lougheed" inkscape:label="#path3369"/>
    	    </a>
    	    <a @onclick=@Path14 @onmouseover=@mouseover14 @onmouseout=@mouseout14>
                <path style=@path14style d="M 336.00199,609.03148 L 336.00199,574.90727 L 328.01547,569.88807 L 319.99739,569.88807 L 319.99739,555.80907 L 322.3018,554.83049 L 323.24882,554.16757 L 325.11128,554.13601 L 325.83733,554.86205 L 328.83622,554.86205 L 333.03467,557.98721 L 335.84415,558.9658 L 335.85938,560.96709 L 337.89063,562.76397 L 338.05804,564.14789 L 339.15179,565.01843 L 345.2567,566.04522 L 349.24107,567.84209 L 351.93081,570.90013 L 353.05804,570.90013 L 354.04018,566.69254 L 356.17188,564.83986 L 359.97768,562.97602 L 366.1942,556.74834 L 367.09822,557.89789 L 367.05357,559.83986 L 366.00447,559.8287 L 366.00447,565.90013 L 359.11831,566.97156 L 357.87947,569.02513 L 360.20089,572.9537 L 362.91295,572.9537 L 367.20982,574.69477 L 367.20982,576.10102 L 385.17857,576.10102 L 383.03572,582.98718 L 383.03572,597.98718 L 384.0625,597.98718 L 384.0625,604.572 L 385.08929,605.3979 L 385.08929,608.88004 L 336.00199,609.03148 z" id="Calgary_Glenmore" inkscape:label="#path3371"/>
    	    </a>
    	    <a @onclick=@Path15 @onmouseover=@mouseover15 @onmouseout=@mouseout15>
                <path style=@path15style d="M 319.61059,508.83185 L 394.14097,508.83185 L 394.14097,510.80735 L 390.90832,510.80735 L 390.01037,511.79511 L 390.01037,513.9502 L 391.08791,514.84816 L 392.07567,514.84816 L 392.07567,518.97875 L 384.80221,518.97875 L 383.99406,519.96651 L 378.9655,519.96651 L 378.9655,521.67263 L 376.63081,521.67263 L 373.75735,524.90527 L 369.89615,524.90527 L 369.89615,528.94607 L 371.04104,530.03485 L 371.04104,532.24606 L 372.02879,532.24606 L 372.02879,533.96341 L 370.7941,533.96341 L 370.7941,536.09605 L 369.90737,536.84809 L 372.16348,539.27256 L 375.95735,542.01134 L 352.83497,542.01134 L 352.83497,517.991 L 338.64727,525.98282 L 335.97585,525.98282 L 335.97585,521.82976 L 336.98604,521.82976 L 336.98604,516.82367 L 333.59626,516.82367 L 333.59626,518.77672 L 329.7575,518.77672 L 329.7575,516.84611 L 319.63304,516.84611 L 319.61059,508.83185 z" id="Calgary_Currie" inkscape:label="#path3373" />
    	    </a>
    	    <a @onclick=@Path16 @onmouseover=@mouseover16 @onmouseout=@mouseout16>
                <path style=@path16style d="M 437.00893,458.74611 L 437.00893,475.79968 L 427.94643,475.79968 L 428.92857,477.94254 L 428.92857,483.79075 L 423.79464,483.79075 L 422.05357,485.57647 L 422.05357,486.9604 L 424.86607,493.03182 L 424.86607,502.85325 L 428.03572,502.85325 L 430.26786,505.26397 L 429.91072,507.00504 L 427.99107,509.68361 L 428.03572,512.04968 L 432.41072,515.97825 L 433.88393,515.97825 L 436.16072,517.98718 L 450.80357,517.98718 L 450.80357,500.97825 L 467.85714,500.97825 L 469.0625,499.81754 L 469.0625,496.87111 L 470.04464,496.87111 L 470.04464,488.88004 L 468.97322,488.88004 L 467.76786,475.75504 L 467.76786,458.74611 L 437.00893,458.74611 z" id="Calgary_East" inkscape:label="#path3375"/>
    	    </a>
    	    <a @onclick=@Path17 @onmouseover=@mouseover17 @onmouseout=@mouseout17>
                <path style=@path17style d="M 422.65108,485.08091 L 419.23885,481.53398 L 419.23885,475.60746 L 361.90434,475.60746 L 361.90434,460.65649 L 358.85128,457.51364 L 358.85128,452.48509 L 360.96148,448.44428 L 360.96148,446.51368 L 364.05942,446.51368 L 369.08798,449.52183 L 370.07574,449.52183 L 370.07574,437.08514 L 372.99409,433.40352 L 374.9696,432.37087 L 376.13694,432.37087 L 376.73286,434.59487 L 376.73286,437.62392 L 376.09204,439.41983 L 379.18999,441.44023 L 386.19405,442.47287 L 408.01439,442.47287 L 409.09194,442.47287 L 410.25928,452.61978 L 413.31233,458.5463 L 437.51226,458.59119 L 437.51226,475.42787 L 428.21841,475.42787 L 429.29596,477.76256 L 429.29596,483.50949 L 424.04291,483.50949 L 422.65108,485.08091 z" id="Calgary_North__Hill" inkscape:label="#path3377"/>
            </a>
    	    <a @onclick=@Path18 @onmouseover=@mouseover18 @onmouseout=@mouseout18>
                <path style=@path18style d="M 337.47992,426.75865 L 359.30026,445.52593 L 360.98393,445.52593 L 360.98393,446.49123 L 364.01453,446.49123 L 369.11044,449.56674 L 370.07574,449.56674 L 370.07574,436.90555 L 373.10634,433.29127 L 374.99205,432.30353 L 376.20429,432.32597 L 376.76551,434.68311 L 376.67572,437.7586 L 375.95735,439.53207 L 379.16755,441.48512 L 386.23895,442.49533 L 408.26133,442.45043 L 408.03684,439.37493 L 406.15113,437.08514 L 405.20827,434.12188 L 405.20827,409.36074 L 397.12667,403.23219 L 389.92057,400.24648 L 381.2104,394.38731 L 379.21244,394.38731 L 373.44307,400.06689 L 366.10227,400.06689 L 365.18188,401.12199 L 359.25536,401.12199 L 358.31251,402.44648 L 353.3064,402.44648 L 348.81662,399.90975 L 341.75595,406.67572 L 341.78929,409.24252 L 340.85591,409.50919 L 340.72257,414.35388 L 341.93374,414.52054 L 341.77818,419.52079 L 337.47992,426.75865 z" id="Calgary_Nose_Hill" inkscape:label="#path3379"/>
            </a>
    	    <a @onclick=@Path19 @onmouseover=@mouseover19 @onmouseout=@mouseout19>
                <path style=@path19style d="M 329.2024,468.9107 L 331.98663,473.94884 L 332.16341,476.95404 L 333.88698,475.93757 L 340.11836,475.80499 L 342.90259,473.81625 L 348.47106,473.81625 L 351.91821,475.93757 L 361.90609,475.93757 L 361.90609,460.86736 L 358.90088,457.81796 L 358.90088,452.64724 L 361.0664,448.75816 L 361.0664,446.01812 L 359.47541,446.01812 L 337.68768,427.2356 L 317.97708,414.64026 L 311.03859,422.90457 L 310.15471,425.95396 L 308.96147,425.95396 L 308.96147,428.694 L 307.90081,428.694 L 307.90081,432.67148 L 306.88434,433.90892 L 302.15557,433.90892 L 301.05071,439.3448 L 300.03425,441.02418 L 303.96753,448.00686 L 309.93374,452.9566 L 317.97708,456.7573 L 317.97708,458.70185 L 328.98143,458.70185 L 329.2024,468.9107 z" id="Calgary_Varsity" inkscape:label="#g3391"/>
            </a>
    	    <a @onclick=@Path20 @onmouseover=@mouseover20 @onmouseout=@mouseout20>
                <path style=@path20style d="M 336.5557,488.81299 L 341.8004,488.81299 L 344.28941,490.67974 L 346.9562,491.65757 L 349.88968,494.59104 L 349.88968,496.72448 L 353.62319,498.76902 L 357.71227,498.76902 L 360.0235,496.72448 L 365.89044,496.72448 L 367.04605,497.7023 L 371.66849,497.7023 L 385.35804,487.74628 L 390.24716,487.74628 L 392.11392,490.76864 L 392.2917,491.92425 L 409.44808,501.25802 L 416.45953,503.73592 L 422.20425,503.73592 L 423.1154,502.72476 L 425.19328,502.72476 L 425.19328,492.90207 L 422.30425,486.80178 L 422.27092,484.57945 L 419.18187,481.50152 L 419.18187,475.57902 L 351.75742,475.57902 L 348.30029,473.48829 L 342.70603,473.48829 L 339.87746,475.62543 L 333.59177,475.62543 L 331.89463,476.69399 L 331.76892,473.73972 L 328.31179,467.70545 L 324.7918,463.49404 L 323.40894,463.49404 L 320.89467,465.4426 L 319.70038,465.4426 L 319.70038,475.56257 L 325.04322,476.81971 L 327.62036,479.52256 L 330.16607,485.77682 L 333.21463,487.78824 L 336.5557,488.81299 z" id="Calgary_Mountain_View" inkscape:label="#path3383" />
            </a>
    	    <a @onclick=@Path21 @onmouseover=@mouseover21 @onmouseout=@mouseout21>
                <path style=@path21style d="M 327.74607,508.68818 L 394.18586,508.68818 L 394.18586,510.82531 L 401.35155,518.05386 L 402.23155,517.04815 L 402.23155,509.56817 L 408.07725,502.59105 L 408.07725,500.51677 L 392.30015,491.84252 L 392.04873,490.58538 L 390.16302,487.69396 L 385.26018,487.69396 L 371.68308,497.62536 L 366.96881,497.62536 L 365.83738,496.74536 L 360.05454,496.74536 L 357.66598,498.69392 L 353.32885,498.69392 L 349.87172,496.6825 L 349.87172,494.54536 L 346.91744,491.52823 L 344.15173,490.58538 L 341.63746,488.82538 L 336.73462,488.82538 L 336.73462,500.7682 L 327.74607,500.7682 L 327.74607,508.68818 z" id="Calgary_Buffalo" inkscape:label="#path3385"/>
            </a>
    	    <a @onclick=@Path22 @onmouseover=@mouseover22 @onmouseout=@mouseout22>
                <path style=@path22style d="M 384.9375,608.79968 L 392.125,608.79968 L 398.75,611.73718 L 413.9375,611.73718 L 420.18211,608.13186 L 420.18211,605.92468 L 423.0625,605.92468 L 423.0625,604.54968 L 421,601.67468 L 421,591.86218 L 450.9375,591.86218 L 450.9375,575.98718 L 430.9375,575.98718 L 425.6875,573.86218 L 421,568.67468 L 419.8125,566.98718 L 422,564.54968 L 422,561.92468 L 420.4375,559.48718 L 416.875,555.98718 L 416.875,551.73718 L 418.9375,549.61218 L 420.1875,549.61218 L 422.3125,547.67468 L 422,545.04968 L 429.0625,537.54968 L 428.9375,535.54968 L 409.8125,503.92468 L 407.8125,502.73718 L 401.9375,509.67468 L 401.9375,517.11218 L 401.1875,518.04968 L 396.6875,513.61218 L 395.0625,513.61218 L 395.0625,520.86218 L 396.125,520.86218 L 396.125,524.86218 L 395.125,524.86218 L 386.9375,547.79968 L 386.9375,558.79968 L 377.9375,558.79968 L 377.9375,576.09656 L 385.09375,576.09656 L 382.96875,583.00281 L 382.96875,598.12781 L 384.17187,598.12781 L 384.17187,604.48718 L 385.07812,605.36218 L 384.9375,608.79968 z" id="Calgary_Egmont" inkscape:label="#path3387"/>
            </a>
    	    <a @onclick=@Path23 @onmouseover=@mouseover23 @onmouseout=@mouseout23>
                <path style=@path23style d="M 376.875,609.04968 L 392,609.04968 L 398.75,611.79968 L 414.125,611.79968 L 420.1875,607.98718 L 420.1875,605.86218 L 423.0625,605.86218 L 423.0625,611.92468 L 425.5,615.17468 L 432.625,622.92468 L 436,622.92468 L 444.125,628.54968 L 444.125,635.73718 L 446.875,639.86218 L 446,641.17468 L 446,643.04968 L 442.9375,646.86218 L 443,648.67468 L 438.125,653.86218 L 434.3125,653.86218 L 429.9375,656.79968 L 429.875,658.67468 L 429.3125,659.92468 L 426.875,657.79968 L 426.0625,658.92468 L 420.3125,658.92468 L 417.9375,657.04968 L 417.9375,654.11218 L 414.875,652.17468 L 414.0625,652.92468 L 411.0625,650.86218 L 411,648.42468 L 407.9375,644.29968 L 407.8125,642.92468 L 404.9375,642.11218 L 405.0625,640.86218 L 405.9375,640.11218 L 406.1875,638.79968 L 403.25,635.98718 L 401.0625,635.92468 L 400.9375,633.86218 L 398.3125,631.79968 L 396.875,631.86218 L 394.625,633.98718 L 393.125,633.98718 L 392.1875,632.73718 L 388,632.79968 L 388.125,631.79968 L 389,630.92468 L 387.3125,628.73718 L 386.0625,628.67468 L 385.25,627.86218 L 381.875,627.92468 L 380,625.73718 L 380.125,623.79968 L 378.9375,622.04968 L 377.0625,622.04968 L 376.0625,619.11218 L 376,615.92468 L 377.0625,614.79968 L 376.875,609.04968 z" id="Calgary_Fish_Creek" inkscape:label="#path3389" />
            </a>
        </g>
    </svg>
</div>

@if (!filterDispBool)
{
    <div class="Neighborhoods_list">
        Neighborhoods Selected
        <ul> 
            @if (Neighborhoods.Count == 0)
            {
                <li>All Neighborhoods Selected</li>
            }
            @foreach (var item in Neighborhoods)
            {
                <li>
                    @item
                </li>
            }

        </ul>
    </div>

    <div class="mapApply">
            <button type="button" onclick=@ListingsBtn>Apply Selections!</button>
    </div>
}

@code {
    [Parameter] public string data { get; set; }

    Boolean Apartment = false;
    Boolean Condominium = false;
    Boolean Detached = false;
    Boolean Duplex = false;
    string minBeds = "1";
    string maxBeds = "8";
    string minBaths = "1";
    string maxBaths = "8";
    string squareft = "500+";
    string minPrice = "0";
    string maxPrice = "2000000";
    string minLimit = "1950000";
    string minWidth = "width: 97.5%;";

    int path1bool = 0;


    string maxLimit = "50000";
    string maxWidth = "width: 97.5%;";

    int minTop = 1;
    double temp;



    protected override void OnParametersSet()
    {
        if (data != null)
        {
            if (data.ElementAt(0) == '1')
            {
                Apartment = true;
            }
            else
            {
                Apartment = false;
            }
            if (data.ElementAt(1) == '1')
            {
                Condominium = true;
            }
            else { 
                Condominium = false;
            }
            if (data.ElementAt(2) == '1')
            {
                Detached = true;
            }
            else { 
                Detached = false;
            }
            if (data.ElementAt(3) == '1')
            {
                Duplex = true;
            }
            else { 
                Duplex = false;
            }
            minBeds = data.ElementAt(4).ToString();
            maxBeds = data.ElementAt(5).ToString();
            minBaths = data.ElementAt(6).ToString();
            maxBaths = data.ElementAt(7).ToString();
            int i = 0;
            if (data.ElementAt(8) == '5')
            {
                squareft = "500+";
                i = 12;
            }
            else {
                squareft = data.Substring(8,5);
                i = 13;
            }
            while (data.ElementAt(i) != '$') {
                i++;
            }
            if (data.ElementAt(8) == '5')
            {
                minPrice = data.Substring(12, i-12);
                maxLimit = (Int64.Parse(minPrice) + 50000).ToString();
                temp = (100.00 - (((double)(Int64.Parse(maxLimit)) / 2000000.00) * 100.00));
                maxWidth = "width: " + temp.ToString() + "%;";
            }
            else {
                minPrice = data.Substring(13, i-13);
                maxLimit = (Int64.Parse(minPrice) + 50000).ToString();
                temp = (100.00 - (((double)(Int64.Parse(maxLimit)) / 2000000.00) * 100.00));
                maxWidth = "width: " + temp.ToString() + "%;";
            }
            i++;
            int j = i;
            while (data.ElementAt(i) != '$')
            {
                i++;
            }
            if (data.ElementAt(8) == '5')
            {
                maxPrice = data.Substring(j, i - j);
                minTop = 1;
                minLimit = (Int64.Parse(maxPrice) - 50000).ToString();
                temp = ((((double)(Int64.Parse(minLimit)) / 2000000.00) * 100.00));
                minWidth = "width: " + temp.ToString() + "%;";
            }
            else
            {
                maxPrice = data.Substring(j, i - j);
                minTop = 1;
                minLimit = (Int64.Parse(maxPrice) - 50000).ToString();
                temp = ((((double)(Int64.Parse(minLimit)) / 2000000.00) * 100.00));
                minWidth = "width: " + temp.ToString() + "%;";
            }

            i++;
            if (data.ElementAt(i) == '0') { i++; }
            else { 
                Path1(); 
                i++; 
            }

            if (data.ElementAt(i) == '0') { i++; }
            else { Path2(); i++; }

            if (data.ElementAt(i) == '0') { i++; }
            else { Path3(); i++; }

            if (data.ElementAt(i) == '0') { i++; }
            else { Path4(); i++; }

            if (data.ElementAt(i) == '0') { i++; }
            else { Path5(); i++; }

            if (data.ElementAt(i) == '0') { i++; }
            else { Path6(); i++; }

            if (data.ElementAt(i) == '0') { i++; }
            else { Path7(); i++; }

            if (data.ElementAt(i) == '0') { i++; }
            else { Path8(); i++; }

            if (data.ElementAt(i) == '0') { i++; }
            else { Path9(); i++; }

            if (data.ElementAt(i) == '0') { i++; }
            else { Path10(); i++; }

            if (data.ElementAt(i) == '0') { i++; }
            else { Path11(); i++; }

            if (data.ElementAt(i) == '0') { i++; }
            else { Path12(); i++; }

            if (data.ElementAt(i) == '0') { i++; }
            else { Path13(); i++; }

            if (data.ElementAt(i) == '0') { i++; }
            else { Path14(); i++; }

            if (data.ElementAt(i) == '0') { i++; }
            else { Path15(); i++; }

            if (data.ElementAt(i) == '0') { i++; }
            else { Path16(); i++; }

            if (data.ElementAt(i) == '0') { i++; }
            else { Path17(); i++; }

            if (data.ElementAt(i) == '0') { i++; }
            else { Path18(); i++; }

            if (data.ElementAt(i) == '0') { i++; }
            else { Path19(); i++; }

            if (data.ElementAt(i) == '0') { i++; }
            else { Path20(); i++; }

            if (data.ElementAt(i) == '0') { i++; }
            else { Path21(); i++; }

            if (data.ElementAt(i) == '0') { i++; }
            else { Path22(); i++; }

            if (data.ElementAt(i) == '0') { i++; }
            else { Path23(); i++; }





        }

    }

    void ListingsBtn()
    {

        string link = "listings/";

        if (!Apartment && !Condominium && !Detached && !Duplex)
        {
            link += "1111";
        }
        else
        {
            if (!Apartment)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }
            if (!Condominium)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }
            if (!Detached)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }
            if (!Duplex)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }
        }

        link += minBeds;
        link += maxBeds;
        link += minBaths;
        link += maxBaths;
        link += squareft;
        link += minPrice;
        link += "$";
        link += maxPrice;
        link += "$";


        if (path1bool == 0 && path2bool == 0 && path3bool == 0 && path4bool == 0 && path5bool == 0 && path6bool == 0 && path7bool == 0 && path8bool == 0 && path9bool == 0 && path10bool == 0 && path11bool == 0 && path12bool == 0 && path13bool == 0 && path14bool == 0 && path15bool == 0 && path16bool == 0 && path17bool == 0 && path18bool == 0 && path19bool == 0 && path20bool == 0 && path21bool == 0 && path22bool == 0 && path23bool == 0)
        {
            for (int i = 0; i < 23; i++)
            {
                link += "1";
            }
        }
        else {

            if (path1bool == 0)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }


            if (path2bool == 0)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }

            if (path3bool == 0)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }

            if (path4bool == 0)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }

            if (path5bool == 0)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }

            if (path6bool == 0)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }

            if (path7bool == 0)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }

            if (path8bool == 0)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }

            if (path9bool == 0)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }

            if (path10bool == 0)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }

            if (path11bool == 0)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }

            if (path12bool == 0)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }

            if (path13bool == 0)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }

            if (path14bool == 0)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }

            if (path15bool == 0)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }

            if (path16bool == 0)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }

            if (path17bool == 0)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }

            if (path18bool == 0)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }

            if (path19bool == 0)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }

            if (path20bool == 0)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }

            if (path21bool == 0)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }

            if (path22bool == 0)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }

            if (path23bool == 0)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }
        }











        NavManager.NavigateTo(link);

    }


    string SelectMinBed
    {
        get => minBeds;
        set { minBeds = value; }
    }

    string SelectMaxBed
    {
        get => maxBeds;
        set { maxBeds = value; }
    }

    string SelectMinBaths
    {
        get => minBaths;
        set { minBaths = value; }
    }

    string SelectMaxBaths
    {
        get => maxBaths;
        set { maxBaths = value; }
    }

    string SelectSquareft
    {
        get => squareft;
        set { squareft = value; }
    }


    List<Sqft> SqftList = new List<Sqft>() { new Sqft("500+"), new Sqft("1000+"), new Sqft("1500+"), new Sqft("2000+"), new Sqft("2500+"), new Sqft("3000+") };

    public class Sqft
    {

        public Sqft(string sqfeet)
        {
            Sqfeet = sqfeet;
        }
        public string Sqfeet { get; set; }

    }


    List<Numbs> NumbList = new List<Numbs>() { new Numbs("1"), new Numbs("2"), new Numbs("3"), new Numbs("4"), new Numbs("5"), new Numbs("6"), new Numbs("7"), new Numbs("8") };

    public class Numbs
    {

        public Numbs(string number)
        {
            Number = number;
        }
        public string Number { get; set; }

    }


    void MapBtn()
    {

        string link = "map/";

        if (!Apartment && !Condominium && !Detached && !Duplex)
        {
            link += "1111";
        }
        else
        {
            if (!Apartment)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }
            if (!Condominium)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }
            if (!Detached)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }
            if (!Duplex)
            {
                link += "0";
            }
            else
            {
                link += "1";
            }
        }

        link += minBeds;
        link += maxBeds;
        link += minBaths;
        link += maxBaths;
        link += squareft;
        link += minPrice;
        link += "$";
        link += maxPrice;
        link += "$";




        NavManager.NavigateTo(link);

    }





    void ChangeMin()
    {
        maxLimit = (Int64.Parse(minPrice) + 50000).ToString();
        temp = (100.00 - (((double)(Int64.Parse(maxLimit)) / 2000000.00) * 100.00));
        maxWidth = "width: " + temp.ToString() + "%;";


    }


    void ChangeMax()
    {

        minTop = 1;
        minLimit = (Int64.Parse(maxPrice) - 50000).ToString();
        temp = ((((double)(Int64.Parse(minLimit)) / 2000000.00) * 100.00));
        minWidth = "width: " + temp.ToString() + "%;";


    }


    async Task ChangeinMin()
    {
        minTop = 1;
    }

    async Task ChangeinMax()
    {
        minTop = 0;
    }


    string SelectMinPrice
    {
        get => String.Format("{0:n0}", Int64.Parse(minPrice));
        set { minPrice = value; }
    }

    string SelectMaxPrice
    {
        get => String.Format("{0:n0}", Int64.Parse(maxPrice));
        set { maxPrice = value; }
    }











    List<string> Neighborhoods = new List<string>();




    string path1style = "fill: transparent;";
    string path1temp = "fill: transparent;";

    Boolean filterDispBool = false;

    void filterShow() {
        if (filterDispBool) {
            filterDispBool = false;
            
        } else {
            filterDispBool = true;
        }
    }

    void mouseover1() {
        path1temp = path1style;
        path1style = "fill: red;";
    }
    void mouseout1() {
        path1style = path1temp;
    }
    void Path1() {
        if (path1bool == 0)
        {
            path1bool = 1;
            path1style = "fill: green;";
            path1temp = "fill: green;";

        }
        else {
            path1bool = 0;
            path1style = "fill: transparent;";
            path1temp = "fill: transparent;";

        }
        SetNeighborhoods();

    } 


    string path2style = "fill: transparent;";
    string path2temp = "fill: transparent;";
    int path2bool = 0;
    void mouseover2()
    {
        path2temp = path2style;
        path2style = "fill: red;";
    }
    void mouseout2()
    {
        path2style = path2temp;
    }
    void Path2()
    {
        if (path2bool == 0)
        {
            path2bool = 1;
            path2style = "fill: green;";
            path2temp = "fill: green;";

        }
        else
        {
            path2bool = 0;
            path2style = "fill: transparent;";
            path2temp = "fill: transparent;";

        }
        SetNeighborhoods();

    }

    string path3style = "fill: transparent;";
    string path3temp = "fill: transparent;";
    int path3bool = 0;
    void mouseover3()
    {
        path3temp = path3style;
        path3style = "fill: red;";
    }
    void mouseout3()
    {
        path3style = path3temp;
    }
    void Path3()
    {
        if (path3bool == 0)
        {
            path3bool = 1;
            path3style = "fill: green;";
            path3temp = "fill: green;";

        }
        else
        {
            path3bool = 0;
            path3style = "fill: transparent;";
            path3temp = "fill: transparent;";

        }
        SetNeighborhoods();

    }


    string path4style = "fill: transparent;";
    string path4temp = "fill: transparent;";
    int path4bool = 0;
    void mouseover4()
    {
        path4temp = path4style;
        path4style = "fill: red;";
    }
    void mouseout4()
    {
        path4style = path4temp;
    }
    void Path4()
    {
        if (path4bool == 0)
        {
            path4bool = 1;
            path4style = "fill: green;";
            path4temp = "fill: green;";

        }
        else
        {
            path4bool = 0;
            path4style = "fill: transparent;";
            path4temp = "fill: transparent;";

        }
        SetNeighborhoods();

    }


    string path5style = "fill: transparent;";
    string path5temp = "fill: transparent;";
    int path5bool = 0;
    void mouseover5()
    {
        path5temp = path5style;
        path5style = "fill: red;";
    }
    void mouseout5()
    {
        path5style = path5temp;
    }
    void Path5()
    {
        if (path5bool == 0)
        {
            path5bool = 1;
            path5style = "fill: green;";
            path5temp = "fill: green;";

        }
        else
        {
            path5bool = 0;
            path5style = "fill: transparent;";
            path5temp = "fill: transparent;";

        }
        SetNeighborhoods();

    }

    string path6style = "fill: transparent;";
    string path6temp = "fill: transparent;";
    int path6bool = 0;
    void mouseover6()
    {
        path6temp = path6style;
        path6style = "fill: red;";
    }
    void mouseout6()
    {
        path6style = path6temp;
    }
    void Path6()
    {
        if (path6bool == 0)
        {
            path6bool = 1;
            path6style = "fill: green;";
            path6temp = "fill: green;";

        }
        else
        {
            path6bool = 0;
            path6style = "fill: transparent;";
            path6temp = "fill: transparent;";

        }
        SetNeighborhoods();

    }


    string path7style = "fill: transparent;";
    string path7temp = "fill: transparent;";
    int path7bool = 0;
    void mouseover7()
    {
        path7temp = path7style;
        path7style = "fill: red;";
    }
    void mouseout7()
    {
        path7style = path7temp;
    }
    void Path7()
    {
        if (path7bool == 0)
        {
            path7bool = 1;
            path7style = "fill: green;";
            path7temp = "fill: green;";

        }
        else
        {
            path7bool = 0;
            path7style = "fill: transparent;";
            path7temp = "fill: transparent;";

        }
        SetNeighborhoods();

    }



    string path8style = "fill: transparent;";
    string path8temp = "fill: transparent;";
    int path8bool = 0;
    void mouseover8()
    {
        path8temp = path8style;
        path8style = "fill: red;";
    }
    void mouseout8()
    {
        path8style = path8temp;
    }
    void Path8()
    {
        if (path8bool == 0)
        {
            path8bool = 1;
            path8style = "fill: green;";
            path8temp = "fill: green;";

        }
        else
        {
            path8bool = 0;
            path8style = "fill: transparent;";
            path8temp = "fill: transparent;";

        }
        SetNeighborhoods();

    }




    string path9style = "fill: transparent;";
    string path9temp = "fill: transparent;";
    int path9bool = 0;
    void mouseover9()
    {
        path9temp = path9style;
        path9style = "fill: red;";
    }
    void mouseout9()
    {
        path9style = path9temp;
    }
    void Path9()
    {
        if (path9bool == 0)
        {
            path9bool = 1;
            path9style = "fill: green;";
            path9temp = "fill: green;";

        }
        else
        {
            path9bool = 0;
            path9style = "fill: transparent;";
            path9temp = "fill: transparent;";

        }
        SetNeighborhoods();

    }



    string path10style = "fill: transparent;";
    string path10temp = "fill: transparent;";
    int path10bool = 0;
    void mouseover10()
    {
        path10temp = path10style;
        path10style = "fill: red;";
    }
    void mouseout10()
    {
        path10style = path10temp;
    }
    void Path10()
    {
        if (path10bool == 0)
        {
            path10bool = 1;
            path10style = "fill: green;";
            path10temp = "fill: green;";

        }
        else
        {
            path10bool = 0;
            path10style = "fill: transparent;";
            path10temp = "fill: transparent;";

        }
        SetNeighborhoods();

    }


    string path11style = "fill: transparent;";
    string path11temp = "fill: transparent;";
    int path11bool = 0;
    void mouseover11()
    {
        path11temp = path11style;
        path11style = "fill: red;";
    }
    void mouseout11()
    {
        path11style = path11temp;
    }
    void Path11()
    {
        if (path11bool == 0)
        {
            path11bool = 1;
            path11style = "fill: green;";
            path11temp = "fill: green;";

        }
        else
        {
            path11bool = 0;
            path11style = "fill: transparent;";
            path11temp = "fill: transparent;";

        }
        SetNeighborhoods();

    }




    string path12style = "fill: transparent;";
    string path12temp = "fill: transparent;";
    int path12bool = 0;
    void mouseover12()
    {
        path12temp = path12style;
        path12style = "fill: red;";
    }
    void mouseout12()
    {
        path12style = path12temp;
    }
    void Path12()
    {
        if (path12bool == 0)
        {
            path12bool = 1;
            path12style = "fill: green;";
            path12temp = "fill: green;";

        }
        else
        {
            path12bool = 0;
            path12style = "fill: transparent;";
            path12temp = "fill: transparent;";

        }
        SetNeighborhoods();

    }



    string path13style = "fill: transparent;";
    string path13temp = "fill: transparent;";
    int path13bool = 0;
    void mouseover13()
    {
        path13temp = path13style;
        path13style = "fill: red;";
    }
    void mouseout13()
    {
        path13style = path13temp;
    }
    void Path13()
    {
        if (path13bool == 0)
        {
            path13bool = 1;
            path13style = "fill: green;";
            path13temp = "fill: green;";

        }
        else
        {
            path13bool = 0;
            path13style = "fill: transparent;";
            path13temp = "fill: transparent;";

        }
        SetNeighborhoods();

    }



    string path14style = "fill: transparent;";
    string path14temp = "fill: transparent;";
    int path14bool = 0;
    void mouseover14()
    {
        path14temp = path14style;
        path14style = "fill: red;";
    }
    void mouseout14()
    {
        path14style = path14temp;
    }
    void Path14()
    {
        if (path14bool == 0)
        {
            path14bool = 1;
            path14style = "fill: green;";
            path14temp = "fill: green;";

        }
        else
        {
            path14bool = 0;
            path14style = "fill: transparent;";
            path14temp = "fill: transparent;";

        }
        SetNeighborhoods();

    }

    string path15style = "fill: transparent;";
    string path15temp = "fill: transparent;";
    int path15bool = 0;
    void mouseover15()
    {
        path15temp = path15style;
        path15style = "fill: red;";
    }
    void mouseout15()
    {
        path15style = path15temp;
    }
    void Path15()
    {
        if (path15bool == 0)
        {
            path15bool = 1;
            path15style = "fill: green;";
            path15temp = "fill: green;";

        }
        else
        {
            path15bool = 0;
            path15style = "fill: transparent;";
            path15temp = "fill: transparent;";

        }
        SetNeighborhoods();

    }

    string path16style = "fill: transparent;";
    string path16temp = "fill: transparent;";
    int path16bool = 0;
    void mouseover16()
    {
        path16temp = path16style;
        path16style = "fill: red;";
    }
    void mouseout16()
    {
        path16style = path16temp;
    }
    void Path16()
    {
        if (path16bool == 0)
        {
            path16bool = 1;
            path16style = "fill: green;";
            path16temp = "fill: green;";

        }
        else
        {
            path16bool = 0;
            path16style = "fill: transparent;";
            path16temp = "fill: transparent;";

        }
        SetNeighborhoods();

    }

    string path17style = "fill: transparent;";
    string path17temp = "fill: transparent;";
    int path17bool = 0;
    void mouseover17()
    {
        path17temp = path17style;
        path17style = "fill: red;";
    }
    void mouseout17()
    {
        path17style = path17temp;
    }
    void Path17()
    {
        if (path17bool == 0)
        {
            path17bool = 1;
            path17style = "fill: green;";
            path17temp = "fill: green;";

        }
        else
        {
            path17bool = 0;
            path17style = "fill: transparent;";
            path17temp = "fill: transparent;";
        }
        SetNeighborhoods();
    }


    string path18style = "fill: transparent;";
    string path18temp = "fill: transparent;";
    int path18bool = 0;
    void mouseover18()
    {
        path18temp = path18style;
        path18style = "fill: red;";
    }
    void mouseout18()
    {
        path18style = path18temp;
    }
    void Path18()
    {
        if (path18bool == 0)
        {
            path18bool = 1;
            path18style = "fill: green;";
            path18temp = "fill: green;";

        }
        else
        {
            path18bool = 0;
            path18style = "fill: transparent;";
            path18temp = "fill: transparent;";

        }
        SetNeighborhoods();

    }


    string path19style = "fill: transparent;";
    string path19temp = "fill: transparent;";
    int path19bool = 0;
    void mouseover19()
    {
        path19temp = path19style;
        path19style = "fill: red;";
    }
    void mouseout19()
    {
        path19style = path19temp;
    }
    void Path19()
    {
        if (path19bool == 0)
        {
            path19bool = 1;
            path19style = "fill: green;";
            path19temp = "fill: green;";

        }
        else
        {
            path19bool = 0;
            path19style = "fill: transparent;";
            path19temp = "fill: transparent;";

        }
        SetNeighborhoods();

    }


    string path20style = "fill: transparent;";
    string path20temp = "fill: transparent;";
    int path20bool = 0;
    void mouseover20()
    {
        path20temp = path20style;
        path20style = "fill: red;";
    }
    void mouseout20()
    {
        path20style = path20temp;
    }
    void Path20()
    {
        if (path20bool == 0)
        {
            path20bool = 1;
            path20style = "fill: green;";
            path20temp = "fill: green;";

        }
        else
        {
            path20bool = 0;
            path20style = "fill: transparent;";
            path20temp = "fill: transparent;";

        }
        SetNeighborhoods();

    }

    string path21style = "fill: transparent;";
    string path21temp = "fill: transparent;";
    int path21bool = 0;
    void mouseover21()
    {
        path21temp = path21style;
        path21style = "fill: red;";
    }
    void mouseout21()
    {
        path21style = path21temp;
    }
    void Path21()
    {
        if (path21bool == 0)
        {
            path21bool = 1;
            path21style = "fill: green;";
            path21temp = "fill: green;";

        }
        else
        {
            path21bool = 0;
            path21style = "fill: transparent;";
            path21temp = "fill: transparent;";

        }
        SetNeighborhoods();

    }
    string path22style = "fill: transparent;";
    string path22temp = "fill: transparent;";
    int path22bool = 0;
    void mouseover22()
    {
        path22temp = path22style;
        path22style = "fill: red;";
    }
    void mouseout22()
    {
        path22style = path22temp;
    }
    void Path22()
    {
        if (path22bool == 0)
        {
            path22bool = 1;
            path22style = "fill: green;";
            path22temp = "fill: green;";

        }
        else
        {
            path22bool = 0;
            path22style = "fill: transparent;";
            path22temp = "fill: transparent;";

        }
        SetNeighborhoods();

    }
    string path23style = "fill: transparent;";
    string path23temp = "fill: transparent;";
    int path23bool = 0;
    void mouseover23()
    {
        path23temp = path23style;
        path23style = "fill: red;";
    }
    void mouseout23()
    {
        path23style = path23temp;
    }
    void Path23()
    {
        if (path23bool == 0)
        {
            path23bool = 1;
            path23style = "fill: green;";
            path23temp = "fill: green;";

        }
        else
        {
            path23bool = 0;
            path23style = "fill: transparent;";
            path23temp = "fill: transparent;";

        }
        SetNeighborhoods();

    }

    void SetNeighborhoods() {
        Neighborhoods = new List<string>(0);
        if (path1bool == 1) {
            Neighborhoods.Add("Royal Vista");
            Neighborhoods.Add("Simons Valley");
            Neighborhoods.Add("Nolan Hill");
            Neighborhoods.Add("Sage Hill");
        }
        if (path2bool == 1)
        {
            Neighborhoods.Add("Evanston");
            Neighborhoods.Add("Coventry Hills");
            Neighborhoods.Add("Country Hills");
            Neighborhoods.Add("Panorama Hills");
        }
        if (path3bool == 1)
        {
            Neighborhoods.Add("Skyview Ranch");
            Neighborhoods.Add("Saddle Ridge");
            Neighborhoods.Add("Taradale");
            Neighborhoods.Add("Martindale");
            Neighborhoods.Add("Falconridge");

        }
        if (path4bool == 1)
        {
            Neighborhoods.Add("Temple");
            Neighborhoods.Add("Whitehorn");
            Neighborhoods.Add("Pineridge");
        }
        if (path5bool == 1)
        {
            Neighborhoods.Add("Rocky Ridge");
            Neighborhoods.Add("Arbour Lake");
            Neighborhoods.Add("Tuscany");
        }
        if (path6bool == 1)
        {
            Neighborhoods.Add("Silver Springs");
            Neighborhoods.Add("Bowness");
            Neighborhoods.Add("Mantgomery");
            Neighborhoods.Add("Westgate");
        }
        if (path7bool == 1)
        {
            Neighborhoods.Add("Aspen Woods");
            Neighborhoods.Add("Springbank Hill");
            Neighborhoods.Add("Signal Hill");
            Neighborhoods.Add("Strathcona Park");
        }
        if (path8bool == 1)
        {
            Neighborhoods.Add("MayFair");
            Neighborhoods.Add("Kelvin Grove");
            Neighborhoods.Add("Chinook Park");
            Neighborhoods.Add("Eagle Ridge");
        }
        if (path9bool == 1)
        {
            Neighborhoods.Add("Abbydale");
            Neighborhoods.Add("Monterey Park");
            Neighborhoods.Add("Applewood Park");
        }
        if (path10bool == 1)
        {
            Neighborhoods.Add("Foothills");
            Neighborhoods.Add("Millican Estates");
            Neighborhoods.Add("ValleyField");
            Neighborhoods.Add("Dover");
            Neighborhoods.Add("Erin Woods");
        }
        if (path11bool == 1)
        {
            Neighborhoods.Add("Mckenzie Towne");
            Neighborhoods.Add("Mahogany");
            Neighborhoods.Add("Auburn Bay");
            Neighborhoods.Add("Seton");
            Neighborhoods.Add("Copperfield");
            Neighborhoods.Add("Craston");
        }
        if (path12bool == 1)
        {
            Neighborhoods.Add("Shawnessy");
            Neighborhoods.Add("Somerset");
            Neighborhoods.Add("Sundance");
        }
        if (path13bool == 1)
        {
            Neighborhoods.Add("Evergreen");
            Neighborhoods.Add("Bridglewood");
        }
        if (path14bool == 1)
        {
            Neighborhoods.Add("Oakridge");
            Neighborhoods.Add("Palliser");
            Neighborhoods.Add("Pump Hill");
            Neighborhoods.Add("Bay View");
        }
        if (path15bool == 1)
        {
            Neighborhoods.Add("South Calgary");
            Neighborhoods.Add("Cliff Bungalow");
            Neighborhoods.Add("Altadore");
            Neighborhoods.Add("Killarney");
        }
        if (path16bool == 1)
        {
            Neighborhoods.Add("Sunridge");
            Neighborhoods.Add("Marlbotough");
            Neighborhoods.Add("Rundle");
            Neighborhoods.Add("Meridian");
        }
        if (path17bool == 1)
        {
            Neighborhoods.Add("Tuxedo Park");
            Neighborhoods.Add("MT Pleasant");
            Neighborhoods.Add("Vista Heights");
        }
        if (path18bool == 1)
        {
            Neighborhoods.Add("Huntington Hills");
            Neighborhoods.Add("Beddington Heights");
            Neighborhoods.Add("Thorncliffe");
        }
        if (path19bool == 1)
        {
            Neighborhoods.Add("Brentwood");
            Neighborhoods.Add("Varsity");
            Neighborhoods.Add("TriWood");
        }
        if (path20bool == 1)
        {
            Neighborhoods.Add("Crescent Heights");
            Neighborhoods.Add("Renfrew");
            Neighborhoods.Add("HillHurst");
        }
        if (path21bool == 1)
        {
            Neighborhoods.Add("Downtown");
            Neighborhoods.Add("Beltline");
            Neighborhoods.Add("Sunalta");
        }
        if (path22bool == 1)
        {
            Neighborhoods.Add("Manchester Industrial");
            Neighborhoods.Add("Fairview");
            Neighborhoods.Add("Alyth");
            Neighborhoods.Add("HighField");
        }
        if (path23bool == 1)
        {
            Neighborhoods.Add("Queensland Downs");
            Neighborhoods.Add("Bonavista Downs");
            Neighborhoods.Add("Parkland");
            Neighborhoods.Add("Deer Ridge");
        }
    
    }
}
