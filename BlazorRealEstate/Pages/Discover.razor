@page "/discover"
@inject NavigationManager NavManager
<PageTitle>Discovery</PageTitle>

<h1 class="page-title">Discovery</h1>

<div class="question">
    <p>Select three properties.</p>
</div>

<div class="column">
</div>
<div class="column">
    <button class="images" id="image1" @onclick=@img1 style=@img1style></button>
</div>
<div class="column">
    <button class="images" id="image2" @onclick=@img2 style=@img2style></button>
</div>
<div class="column">
    <button class="images" id="image3" @onclick=@img3 style=@img3style></button>
</div>
<div class="column">
</div>

<div class="column">
</div>
<div class="column">

    <button class="images" id="image4" @onclick=@img4 style=@img4style></button>
</div>
<div class="column">

    <button class="images" id="image5" @onclick=@img5 style=@img5style></button>
</div>
<div class="column">

    <button class="images" id="image6" @onclick=@img6 style=@img6style></button>
</div>
<div class="column">
</div>

<div class="column">
</div>
<div class="column">

    <button class="images" id="image7" @onclick=@img7 style=@img7style></button>
</div>
<div class="column">

    <button class="images" id="image8" @onclick=@img8 style=@img8style></button>
</div>
<div class="column">

    <button class="images" id="image9" @onclick=@img9 style=@img9style></button>
</div>
<div class="column">
</div>



<div class="question">
    <p>How much do you value space.</p>
</div>

<div>
    <div class="slider">
        <input type="range" id="slider-input" min="1" max="5" @bind="spaceValue" @bind:event="oninput" step="1">
    </div>
</div>
<hr />
<div class="value-column">
    <div class="options">Not at all</div>
</div>
<div class="value-column">
</div>
<div class="value-column">
</div>
<div class="value-column">
</div>
<div class="value-column">
    <div class="options">Very much</div>
</div>



<div class="question">
    <p>How many people will be moving in.</p>
</div>

<div>
    <div class="slider">
        <input type="range" id="slider-input" min="1" max="5" @bind="peopleValue" @bind:event="oninput" step="1">
    </div>
</div>
<hr />
<div class="value-column">
    <div class="options">1</div>
</div>
<div class="value-column">

    <div class="options">2</div>
</div>
<div class="value-column">

    <div class="options">3</div>
</div>
<div class="value-column">

    <div class="options">4</div>
</div>
<div class="value-column">
    <div class="options">5+</div>
</div>

<div class="error-column" style=@errorstyle>
    <text class="error-msg">@error</text>
    <button type="button" class="error-btn" @onclick=@closeError>x</button>
</div>

<div class="btn-column">
    <button type="button" @onclick=@discoverNext>
        Continue
    </button>
</div>




@code {
    string data ="";
    string spaceValue = "5";
    string peopleValue = "5";
    int selected = 0;
    string errorstyle = "visibility: hidden;";
    string error = "Three properties already selected";

    string GetLink() { 
        string link = "discover2/";
        link += (data + spaceValue + peopleValue);
        return link;
    }

    string SelectSpace
    {
        get => spaceValue;
        set { spaceValue = value; }
    }
    string SelectSelected
    {
        get => selected.ToString();
        set { spaceValue = value; }
    }
    string SelectPeople
    {
        get => peopleValue;
        set { peopleValue = value; }
    }
    string SelectData
    {
        get => data;
        set { data = value; }
    }

    int check()
    {
        if (selected == 3)
        {
            errorstyle = "visibility: visible;";
            hideerror();
            return 1;
        }
        else
        {
            errorstyle = "visibility: hidden;";
            return 0;
        }

    }
    void closeError() { 
        errorstyle = "visibility: hidden;";
    }
    async Task hideerror() { 
        await Task.Delay(1000);
        errorstyle = "visibility: hidden;";
        error = "Three properties already selected";
    }

    string img1style = "border: 7px solid black;";
    int image1bool = 0;
    void img1()
    {
        if (image1bool == 1)
        {
            selected--;
            errorstyle = "visibility: hidden;";
            img1style = "border: 7px solid black;";
            image1bool = 0;
        }
        else if (check() == 0)
        {
            img1style = "border: 7px solid red;";
            selected++;
            image1bool = 1;
        }
    }

    string img2style = "border: 7px solid black;";
    int image2bool = 0;
    void img2()
    {
        if (image2bool == 1)
        {
            selected--;
            errorstyle = "visibility: hidden;";
            img2style = "border: 7px solid black;";
            image2bool = 0;
        }
        else if (check() == 0)
        {
            img2style = "border: 7px solid red;";
            selected++;
            image2bool = 1;
        }
    }

    string img3style = "border: 7px solid black;";
    int image3bool = 0;
    void img3()
    {
        if (image3bool == 1)
        {
            selected--;
            errorstyle = "visibility: hidden;";
            img3style = "border: 7px solid black;";
            image3bool = 0;
        }
        else if (check() == 0)
        {
            img3style = "border: 7px solid red;";
            selected++;
            image3bool = 1;
        }
    }

    string img4style = "border: 7px solid black;";
    int image4bool = 0;
    void img4()
    {
        if (image4bool == 1)
        {
            selected--;
            errorstyle = "visibility: hidden;";
            img4style = "border: 7px solid black;";
            image4bool = 0;
        }
        else if (check() == 0)
        {
            errorstyle = "visibility: hidden;";
            img4style = "border: 7px solid red;";
            selected++;
            image4bool = 1;
        }
    }

    string img5style = "border: 7px solid black;";
    int image5bool = 0;
    void img5()
    {
        if (image5bool == 1)
        {
            errorstyle = "visibility: hidden;";
            selected--;
            img5style = "border: 7px solid black;";
            image5bool = 0;
        }
        else if (check() == 0)
        {
            errorstyle = "visibility: hidden;";
            img5style = "border: 7px solid red;";
            selected++;
            image5bool = 1;
        }
    }

    string img6style = "border: 7px solid black;";
    int image6bool = 0;
    void img6()
    {
        if (image6bool == 1)
        {
            errorstyle = "visibility: hidden;";
            selected--;
            img6style = "border: 7px solid black;";
            image6bool = 0;
        }
        else if (check() == 0)
        {
            errorstyle = "visibility: hidden;";
            img6style = "border: 7px solid red;";
            selected++;
            image6bool = 1;
        }
    }

    string img7style = "border: 7px solid black;";
    int image7bool = 0;
    void img7()
    {
        if (image7bool == 1)
        {
            errorstyle = "visibility: hidden;";
            selected--;
            img7style = "border: 7px solid black;";
            image7bool = 0;
        }
        else if (check() == 0)
        {
            img7style = "border: 7px solid red;";
            selected++;
            image7bool = 1;
        }
    }

    string img8style = "border: 7px solid black;";
    int image8bool = 0;
    void img8()
    {
        if (image8bool == 1)
        {
            errorstyle = "visibility: hidden;";
            selected--;
            img8style = "border: 7px solid black;";
            image8bool = 0;
        }
        else if (check() == 0)
        {
            img8style = "border: 7px solid red;";
            selected++;
            image8bool = 1;
        }
    }

    string img9style = "border: 7px solid black;";
    int image9bool = 0;
    void img9()
    {
        if (image9bool == 1)
        {
            errorstyle = "visibility: hidden;";
            selected--;
            img9style = "border: 7px solid black;";
            image9bool = 0;
        }
        else if (check() == 0)
        {
            img9style = "border: 7px solid red;";
            selected++;
            image9bool = 1;
        }
    }

    void discoverNext() {
        if (selected != 3) {
            error = "Please select three properties";
            errorstyle = "visibility: visible;";
            hideerror();
        }
        else{
            if (image4bool == 1 && image8bool == 1) {
                data = "Apartment";
            }
            else if (image9bool == 1 && image6bool == 1)
            {
                data = "Condominium";
            }
            else if (image3bool == 1 && image5bool == 1)
            {
                data = "Duplex";
            }
            else 
            {
                data = "Detached";
            }
            NavManager.NavigateTo(GetLink());
        }
    }




}
